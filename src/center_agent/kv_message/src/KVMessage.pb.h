// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KVMessage.proto

#ifndef PROTOBUF_KVMessage_2eproto__INCLUDED
#define PROTOBUF_KVMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)
namespace KVMessage {
class BinValue;
class BinValueDefaultTypeInternal;
extern BinValueDefaultTypeInternal _BinValue_default_instance_;
class IntValue;
class IntValueDefaultTypeInternal;
extern IntValueDefaultTypeInternal _IntValue_default_instance_;
class RequestMessage;
class RequestMessageDefaultTypeInternal;
extern RequestMessageDefaultTypeInternal _RequestMessage_default_instance_;
class ResponseMessage;
class ResponseMessageDefaultTypeInternal;
extern ResponseMessageDefaultTypeInternal _ResponseMessage_default_instance_;
class StringPair;
class StringPairDefaultTypeInternal;
extern StringPairDefaultTypeInternal _StringPair_default_instance_;
class StringValue;
class StringValueDefaultTypeInternal;
extern StringValueDefaultTypeInternal _StringValue_default_instance_;
}  // namespace KVMessage

namespace KVMessage {

namespace protobuf_KVMessage_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_KVMessage_2eproto

enum CmdID {
  CMD_ECHO = 0,
  CMD_HEART_BEAT = 1,
  CMD_INSTALL = 2,
  CMD_LOGIN = 3,
  CMD_REPORT = 4,
  CMD_COMMON_REPORT = 5,
  CMD_CENTER = 10,
  CmdID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CmdID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CmdID_IsValid(int value);
const CmdID CmdID_MIN = CMD_ECHO;
const CmdID CmdID_MAX = CMD_CENTER;
const int CmdID_ARRAYSIZE = CmdID_MAX + 1;

enum SubCmdID {
  SUBCMD_STUB = 0,
  SUBCMD_QUERY_TASK = 0,
  SUBCMD_INSTALL = 0,
  SUBCMD_UNINSTALL = 1,
  SUBCMD_LOGIN = 0,
  SUBCMD_LOGOUT = 1,
  SUBCMD_REGISTER = 2,
  SUBCMD_UNREGISTER = 3,
  SUBCMD_HARDWARE = 1,
  SUBCMD_SOFTWARE = 2,
  SUBCMD_VERSION = 3,
  SUBCMD_VIRUS = 4,
  SUBCMD_COMPONENT = 5,
  SUBCMD_TASKPROCEED = 6,
  SUBCMD_COMMON_REPORT = 1,
  SubCmdID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SubCmdID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SubCmdID_IsValid(int value);
const SubCmdID SubCmdID_MIN = SUBCMD_STUB;
const SubCmdID SubCmdID_MAX = SUBCMD_TASKPROCEED;
const int SubCmdID_ARRAYSIZE = SubCmdID_MAX + 1;

enum InfoCode {
  INFO_OK = 0,
  InfoCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InfoCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InfoCode_IsValid(int value);
const InfoCode InfoCode_MIN = INFO_OK;
const InfoCode InfoCode_MAX = INFO_OK;
const int InfoCode_ARRAYSIZE = InfoCode_MAX + 1;

enum ErrorCode {
  ERR_OK = 0,
  ERR_UNSUPPORT = 1,
  ERR_NEED_LOGIN = 2,
  ERR_UNDEFINE = 10,
  ERR_BAD_ARG = 11,
  ERR_BAD_DATA = 12,
  ERR_DB_FAIL = 13,
  ERR_NOT_REGISTER = 20,
  ERR_NO_LIC = 21,
  ERR_LIC_EXPIRE = 22,
  ERR_LIC_SYS = 23,
  ERR_BANNED_INST = 26,
  ERR_NOTCONN_PARENT = 27,
  ErrorCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ErrorCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ErrorCode_IsValid(int value);
const ErrorCode ErrorCode_MIN = ERR_OK;
const ErrorCode ErrorCode_MAX = ERR_NOTCONN_PARENT;
const int ErrorCode_ARRAYSIZE = ErrorCode_MAX + 1;

enum KeyCode {
  KEY_TOKEN = 0,
  RESPKEY_TASK = 1,
  KEY_ECHOSTR = 3,
  KEY_ECHOINT = 4,
  KEY_ECHOBIN = 5,
  KEY_ECHOPAIR = 6,
  KEY_NODEID = 3,
  KEY_PRODUCTID = 4,
  KEY_PRODUCTTYPE = 5,
  KEY_PRODUCTRUNMODE = 6,
  KEY_PRODUCTVERSION = 7,
  KEY_PRODUCTVERSION2 = 8,
  KEY_PRODUCTOS = 9,
  KEY_MACHINENAME = 10,
  KEY_IPADDR = 11,
  KEY_MAC = 12,
  KEY_OSVERSION = 13,
  KEY_PRODUCTBITS = 14,
  KEY_INTERFACE = 15,
  KEY_GROUPNAME = 16,
  KEY_OSNAME = 17,
  KEY_RUNSTATUS = 3,
  KEY_TASKID = 4,
  KEY_TASKRESULT = 5,
  KEY_HEARTBEAT = 6,
  KEY_TASK_CMD = 7,
  KEY_TASK_PARAMS = 8,
  KEY_OP = 10,
  KEY_COMPONENT = 100,
  KEY_SCANOBJECT = 101,
  KEY_URL = 102,
  KEY_STOREPATH = 103,
  KEY_FILEPATH = 104,
  KEY_ARGS = 105,
  KEY_MODEL = 106,
  KEY_CPU = 3,
  KEY_MAC_ADDR = 4,
  KEY_SOFT = 3,
  KEY_VIRUSOP = 3,
  KEY_VIRUSFINDBY = 4,
  KEY_SAMPSIZE = 5,
  KEY_SAMPTIME = 6,
  KEY_FINDTIME = 7,
  KEY_VIRUSNAME = 8,
  KEY_SAMPMD5 = 9,
  KEY_SAMPSHA1 = 10,
  KEY_TASKPROCEED = 5,
  KEY_REPORT_TYPE = 4,
  KEY_REPORT_ACTION = 5,
  KEY_REPORT_INFO = 6,
  KeyCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  KeyCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool KeyCode_IsValid(int value);
const KeyCode KeyCode_MIN = KEY_TOKEN;
const KeyCode KeyCode_MAX = KEY_MODEL;
const int KeyCode_ARRAYSIZE = KeyCode_MAX + 1;

enum RunStatus {
  STATUS_NONE = 0,
  STATUS_SCAN = 1,
  STATUS_FILEMON = 2,
  STATUS_FIREWALL = 4,
  STATUS_HIPS = 8,
  STATUS_UPDATE = 16,
  STATUS_REPAIRLEAK = 32,
  STATUS_STUDYMODEL = 64,
  STATUS_WORKMODEL = 128,
  STATUS_DENYMODEL = 256,
  RunStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RunStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RunStatus_IsValid(int value);
const RunStatus RunStatus_MIN = STATUS_NONE;
const RunStatus RunStatus_MAX = STATUS_DENYMODEL;
const int RunStatus_ARRAYSIZE = RunStatus_MAX + 1;

enum RunFlag {
  RF_NONE = 0,
  RF_ONLINE = 1,
  RF_LICENSE = 2,
  RF_FINDVIRUS = 4,
  RunFlag_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RunFlag_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RunFlag_IsValid(int value);
const RunFlag RunFlag_MIN = RF_NONE;
const RunFlag RunFlag_MAX = RF_FINDVIRUS;
const int RunFlag_ARRAYSIZE = RunFlag_MAX + 1;

enum FindByMode {
  FROM_SCAN = 0,
  FROM_FILEMONITOR = 1,
  FROM_WEBMONITOR = 2,
  FROM_ONLINESCAN = 3,
  FROM_UDISKSCAN = 4,
  FindByMode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FindByMode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FindByMode_IsValid(int value);
const FindByMode FindByMode_MIN = FROM_SCAN;
const FindByMode FindByMode_MAX = FROM_UDISKSCAN;
const int FindByMode_ARRAYSIZE = FindByMode_MAX + 1;

enum VirudOP {
  OP_FIND = 0,
  OP_DELETED = 1,
  OP_CURED = 2,
  VirudOP_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VirudOP_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VirudOP_IsValid(int value);
const VirudOP VirudOP_MIN = OP_FIND;
const VirudOP VirudOP_MAX = OP_CURED;
const int VirudOP_ARRAYSIZE = VirudOP_MAX + 1;

enum DownloadOpCode {
  DOP_NONE = 0,
  DOP_RUN = 1,
  DownloadOpCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DownloadOpCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DownloadOpCode_IsValid(int value);
const DownloadOpCode DownloadOpCode_MIN = DOP_NONE;
const DownloadOpCode DownloadOpCode_MAX = DOP_RUN;
const int DownloadOpCode_ARRAYSIZE = DownloadOpCode_MAX + 1;

enum TaskResult {
  VALUE_NOTASK = 0,
  VALUE_SUCCESS = 1,
  VALUE_NEEDNOT = 2,
  VALUE_UNSUPPORT = 3,
  VALUE_ERROR = 4,
  VALUE_START = 10,
  VALUE_PROCEED = 11,
  TaskResult_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TaskResult_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TaskResult_IsValid(int value);
const TaskResult TaskResult_MIN = VALUE_NOTASK;
const TaskResult TaskResult_MAX = VALUE_PROCEED;
const int TaskResult_ARRAYSIZE = TaskResult_MAX + 1;

// ===================================================================

class StringValue : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:KVMessage.StringValue) */ {
 public:
  StringValue();
  virtual ~StringValue();

  StringValue(const StringValue& from);

  inline StringValue& operator=(const StringValue& from) {
    CopyFrom(from);
    return *this;
  }

  static const StringValue& default_instance();

  static inline const StringValue* internal_default_instance() {
    return reinterpret_cast<const StringValue*>(
               &_StringValue_default_instance_);
  }

  void Swap(StringValue* other);

  // implements Message ----------------------------------------------

  inline StringValue* New() const PROTOBUF_FINAL { return New(NULL); }

  StringValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const StringValue& from);
  void MergeFrom(const StringValue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StringValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // int32 key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::int32 key() const;
  void set_key(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:KVMessage.StringValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::int32 key_;
  mutable int _cached_size_;
  friend struct  protobuf_KVMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IntValue : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:KVMessage.IntValue) */ {
 public:
  IntValue();
  virtual ~IntValue();

  IntValue(const IntValue& from);

  inline IntValue& operator=(const IntValue& from) {
    CopyFrom(from);
    return *this;
  }

  static const IntValue& default_instance();

  static inline const IntValue* internal_default_instance() {
    return reinterpret_cast<const IntValue*>(
               &_IntValue_default_instance_);
  }

  void Swap(IntValue* other);

  // implements Message ----------------------------------------------

  inline IntValue* New() const PROTOBUF_FINAL { return New(NULL); }

  IntValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IntValue& from);
  void MergeFrom(const IntValue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IntValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::int32 key() const;
  void set_key(::google::protobuf::int32 value);

  // int32 value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:KVMessage.IntValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::int32 key_;
  ::google::protobuf::int32 value_;
  mutable int _cached_size_;
  friend struct  protobuf_KVMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BinValue : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:KVMessage.BinValue) */ {
 public:
  BinValue();
  virtual ~BinValue();

  BinValue(const BinValue& from);

  inline BinValue& operator=(const BinValue& from) {
    CopyFrom(from);
    return *this;
  }

  static const BinValue& default_instance();

  static inline const BinValue* internal_default_instance() {
    return reinterpret_cast<const BinValue*>(
               &_BinValue_default_instance_);
  }

  void Swap(BinValue* other);

  // implements Message ----------------------------------------------

  inline BinValue* New() const PROTOBUF_FINAL { return New(NULL); }

  BinValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const BinValue& from);
  void MergeFrom(const BinValue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BinValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // int32 key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::int32 key() const;
  void set_key(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:KVMessage.BinValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::int32 key_;
  mutable int _cached_size_;
  friend struct  protobuf_KVMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StringPair : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:KVMessage.StringPair) */ {
 public:
  StringPair();
  virtual ~StringPair();

  StringPair(const StringPair& from);

  inline StringPair& operator=(const StringPair& from) {
    CopyFrom(from);
    return *this;
  }

  static const StringPair& default_instance();

  static inline const StringPair* internal_default_instance() {
    return reinterpret_cast<const StringPair*>(
               &_StringPair_default_instance_);
  }

  void Swap(StringPair* other);

  // implements Message ----------------------------------------------

  inline StringPair* New() const PROTOBUF_FINAL { return New(NULL); }

  StringPair* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const StringPair& from);
  void MergeFrom(const StringPair& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StringPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // string value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:KVMessage.StringPair)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable int _cached_size_;
  friend struct  protobuf_KVMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResponseMessage : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:KVMessage.ResponseMessage) */ {
 public:
  ResponseMessage();
  virtual ~ResponseMessage();

  ResponseMessage(const ResponseMessage& from);

  inline ResponseMessage& operator=(const ResponseMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ResponseMessage& default_instance();

  static inline const ResponseMessage* internal_default_instance() {
    return reinterpret_cast<const ResponseMessage*>(
               &_ResponseMessage_default_instance_);
  }

  void Swap(ResponseMessage* other);

  // implements Message ----------------------------------------------

  inline ResponseMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  ResponseMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ResponseMessage& from);
  void MergeFrom(const ResponseMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResponseMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KVMessage.StringValue strvals = 10;
  int strvals_size() const;
  void clear_strvals();
  static const int kStrvalsFieldNumber = 10;
  const ::KVMessage::StringValue& strvals(int index) const;
  ::KVMessage::StringValue* mutable_strvals(int index);
  ::KVMessage::StringValue* add_strvals();
  ::google::protobuf::RepeatedPtrField< ::KVMessage::StringValue >*
      mutable_strvals();
  const ::google::protobuf::RepeatedPtrField< ::KVMessage::StringValue >&
      strvals() const;

  // repeated .KVMessage.IntValue intvals = 11;
  int intvals_size() const;
  void clear_intvals();
  static const int kIntvalsFieldNumber = 11;
  const ::KVMessage::IntValue& intvals(int index) const;
  ::KVMessage::IntValue* mutable_intvals(int index);
  ::KVMessage::IntValue* add_intvals();
  ::google::protobuf::RepeatedPtrField< ::KVMessage::IntValue >*
      mutable_intvals();
  const ::google::protobuf::RepeatedPtrField< ::KVMessage::IntValue >&
      intvals() const;

  // repeated .KVMessage.BinValue binvals = 12;
  int binvals_size() const;
  void clear_binvals();
  static const int kBinvalsFieldNumber = 12;
  const ::KVMessage::BinValue& binvals(int index) const;
  ::KVMessage::BinValue* mutable_binvals(int index);
  ::KVMessage::BinValue* add_binvals();
  ::google::protobuf::RepeatedPtrField< ::KVMessage::BinValue >*
      mutable_binvals();
  const ::google::protobuf::RepeatedPtrField< ::KVMessage::BinValue >&
      binvals() const;

  // repeated .KVMessage.StringPair strpairs = 13;
  int strpairs_size() const;
  void clear_strpairs();
  static const int kStrpairsFieldNumber = 13;
  const ::KVMessage::StringPair& strpairs(int index) const;
  ::KVMessage::StringPair* mutable_strpairs(int index);
  ::KVMessage::StringPair* add_strpairs();
  ::google::protobuf::RepeatedPtrField< ::KVMessage::StringPair >*
      mutable_strpairs();
  const ::google::protobuf::RepeatedPtrField< ::KVMessage::StringPair >&
      strpairs() const;

  // int32 error = 1;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // int32 info = 2;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  ::google::protobuf::int32 info() const;
  void set_info(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:KVMessage.ResponseMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::KVMessage::StringValue > strvals_;
  ::google::protobuf::RepeatedPtrField< ::KVMessage::IntValue > intvals_;
  ::google::protobuf::RepeatedPtrField< ::KVMessage::BinValue > binvals_;
  ::google::protobuf::RepeatedPtrField< ::KVMessage::StringPair > strpairs_;
  ::google::protobuf::int32 error_;
  ::google::protobuf::int32 info_;
  mutable int _cached_size_;
  friend struct  protobuf_KVMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RequestMessage : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:KVMessage.RequestMessage) */ {
 public:
  RequestMessage();
  virtual ~RequestMessage();

  RequestMessage(const RequestMessage& from);

  inline RequestMessage& operator=(const RequestMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const RequestMessage& default_instance();

  static inline const RequestMessage* internal_default_instance() {
    return reinterpret_cast<const RequestMessage*>(
               &_RequestMessage_default_instance_);
  }

  void Swap(RequestMessage* other);

  // implements Message ----------------------------------------------

  inline RequestMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  RequestMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const RequestMessage& from);
  void MergeFrom(const RequestMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RequestMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KVMessage.StringValue strvals = 10;
  int strvals_size() const;
  void clear_strvals();
  static const int kStrvalsFieldNumber = 10;
  const ::KVMessage::StringValue& strvals(int index) const;
  ::KVMessage::StringValue* mutable_strvals(int index);
  ::KVMessage::StringValue* add_strvals();
  ::google::protobuf::RepeatedPtrField< ::KVMessage::StringValue >*
      mutable_strvals();
  const ::google::protobuf::RepeatedPtrField< ::KVMessage::StringValue >&
      strvals() const;

  // repeated .KVMessage.IntValue intvals = 11;
  int intvals_size() const;
  void clear_intvals();
  static const int kIntvalsFieldNumber = 11;
  const ::KVMessage::IntValue& intvals(int index) const;
  ::KVMessage::IntValue* mutable_intvals(int index);
  ::KVMessage::IntValue* add_intvals();
  ::google::protobuf::RepeatedPtrField< ::KVMessage::IntValue >*
      mutable_intvals();
  const ::google::protobuf::RepeatedPtrField< ::KVMessage::IntValue >&
      intvals() const;

  // repeated .KVMessage.BinValue binvals = 12;
  int binvals_size() const;
  void clear_binvals();
  static const int kBinvalsFieldNumber = 12;
  const ::KVMessage::BinValue& binvals(int index) const;
  ::KVMessage::BinValue* mutable_binvals(int index);
  ::KVMessage::BinValue* add_binvals();
  ::google::protobuf::RepeatedPtrField< ::KVMessage::BinValue >*
      mutable_binvals();
  const ::google::protobuf::RepeatedPtrField< ::KVMessage::BinValue >&
      binvals() const;

  // repeated .KVMessage.StringPair strpairs = 13;
  int strpairs_size() const;
  void clear_strpairs();
  static const int kStrpairsFieldNumber = 13;
  const ::KVMessage::StringPair& strpairs(int index) const;
  ::KVMessage::StringPair* mutable_strpairs(int index);
  ::KVMessage::StringPair* add_strpairs();
  ::google::protobuf::RepeatedPtrField< ::KVMessage::StringPair >*
      mutable_strpairs();
  const ::google::protobuf::RepeatedPtrField< ::KVMessage::StringPair >&
      strpairs() const;

  // string id = 5;
  void clear_id();
  static const int kIdFieldNumber = 5;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string token = 6;
  void clear_token();
  static const int kTokenFieldNumber = 6;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // fixed32 msgno = 1;
  void clear_msgno();
  static const int kMsgnoFieldNumber = 1;
  ::google::protobuf::uint32 msgno() const;
  void set_msgno(::google::protobuf::uint32 value);

  // int32 version = 2;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  ::google::protobuf::int32 version() const;
  void set_version(::google::protobuf::int32 value);

  // int32 cmd = 3;
  void clear_cmd();
  static const int kCmdFieldNumber = 3;
  ::google::protobuf::int32 cmd() const;
  void set_cmd(::google::protobuf::int32 value);

  // int32 subcmd = 4;
  void clear_subcmd();
  static const int kSubcmdFieldNumber = 4;
  ::google::protobuf::int32 subcmd() const;
  void set_subcmd(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:KVMessage.RequestMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::KVMessage::StringValue > strvals_;
  ::google::protobuf::RepeatedPtrField< ::KVMessage::IntValue > intvals_;
  ::google::protobuf::RepeatedPtrField< ::KVMessage::BinValue > binvals_;
  ::google::protobuf::RepeatedPtrField< ::KVMessage::StringPair > strpairs_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::uint32 msgno_;
  ::google::protobuf::int32 version_;
  ::google::protobuf::int32 cmd_;
  ::google::protobuf::int32 subcmd_;
  mutable int _cached_size_;
  friend struct  protobuf_KVMessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// StringValue

// int32 key = 1;
inline void StringValue::clear_key() {
  key_ = 0;
}
inline ::google::protobuf::int32 StringValue::key() const {
  // @@protoc_insertion_point(field_get:KVMessage.StringValue.key)
  return key_;
}
inline void StringValue::set_key(::google::protobuf::int32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:KVMessage.StringValue.key)
}

// string value = 2;
inline void StringValue::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StringValue::value() const {
  // @@protoc_insertion_point(field_get:KVMessage.StringValue.value)
  return value_.GetNoArena();
}
inline void StringValue::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KVMessage.StringValue.value)
}
#if LANG_CXX11
inline void StringValue::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KVMessage.StringValue.value)
}
#endif
inline void StringValue::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KVMessage.StringValue.value)
}
inline void StringValue::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KVMessage.StringValue.value)
}
inline ::std::string* StringValue::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:KVMessage.StringValue.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StringValue::release_value() {
  // @@protoc_insertion_point(field_release:KVMessage.StringValue.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StringValue::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:KVMessage.StringValue.value)
}

// -------------------------------------------------------------------

// IntValue

// int32 key = 1;
inline void IntValue::clear_key() {
  key_ = 0;
}
inline ::google::protobuf::int32 IntValue::key() const {
  // @@protoc_insertion_point(field_get:KVMessage.IntValue.key)
  return key_;
}
inline void IntValue::set_key(::google::protobuf::int32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:KVMessage.IntValue.key)
}

// int32 value = 2;
inline void IntValue::clear_value() {
  value_ = 0;
}
inline ::google::protobuf::int32 IntValue::value() const {
  // @@protoc_insertion_point(field_get:KVMessage.IntValue.value)
  return value_;
}
inline void IntValue::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:KVMessage.IntValue.value)
}

// -------------------------------------------------------------------

// BinValue

// int32 key = 1;
inline void BinValue::clear_key() {
  key_ = 0;
}
inline ::google::protobuf::int32 BinValue::key() const {
  // @@protoc_insertion_point(field_get:KVMessage.BinValue.key)
  return key_;
}
inline void BinValue::set_key(::google::protobuf::int32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:KVMessage.BinValue.key)
}

// bytes value = 2;
inline void BinValue::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BinValue::value() const {
  // @@protoc_insertion_point(field_get:KVMessage.BinValue.value)
  return value_.GetNoArena();
}
inline void BinValue::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KVMessage.BinValue.value)
}
#if LANG_CXX11
inline void BinValue::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KVMessage.BinValue.value)
}
#endif
inline void BinValue::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KVMessage.BinValue.value)
}
inline void BinValue::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KVMessage.BinValue.value)
}
inline ::std::string* BinValue::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:KVMessage.BinValue.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BinValue::release_value() {
  // @@protoc_insertion_point(field_release:KVMessage.BinValue.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BinValue::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:KVMessage.BinValue.value)
}

// -------------------------------------------------------------------

// StringPair

// string key = 1;
inline void StringPair::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StringPair::key() const {
  // @@protoc_insertion_point(field_get:KVMessage.StringPair.key)
  return key_.GetNoArena();
}
inline void StringPair::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KVMessage.StringPair.key)
}
#if LANG_CXX11
inline void StringPair::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KVMessage.StringPair.key)
}
#endif
inline void StringPair::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KVMessage.StringPair.key)
}
inline void StringPair::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KVMessage.StringPair.key)
}
inline ::std::string* StringPair::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:KVMessage.StringPair.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StringPair::release_key() {
  // @@protoc_insertion_point(field_release:KVMessage.StringPair.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StringPair::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:KVMessage.StringPair.key)
}

// string value = 2;
inline void StringPair::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StringPair::value() const {
  // @@protoc_insertion_point(field_get:KVMessage.StringPair.value)
  return value_.GetNoArena();
}
inline void StringPair::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KVMessage.StringPair.value)
}
#if LANG_CXX11
inline void StringPair::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KVMessage.StringPair.value)
}
#endif
inline void StringPair::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KVMessage.StringPair.value)
}
inline void StringPair::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KVMessage.StringPair.value)
}
inline ::std::string* StringPair::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:KVMessage.StringPair.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StringPair::release_value() {
  // @@protoc_insertion_point(field_release:KVMessage.StringPair.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StringPair::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:KVMessage.StringPair.value)
}

// -------------------------------------------------------------------

// ResponseMessage

// int32 error = 1;
inline void ResponseMessage::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 ResponseMessage::error() const {
  // @@protoc_insertion_point(field_get:KVMessage.ResponseMessage.error)
  return error_;
}
inline void ResponseMessage::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:KVMessage.ResponseMessage.error)
}

// int32 info = 2;
inline void ResponseMessage::clear_info() {
  info_ = 0;
}
inline ::google::protobuf::int32 ResponseMessage::info() const {
  // @@protoc_insertion_point(field_get:KVMessage.ResponseMessage.info)
  return info_;
}
inline void ResponseMessage::set_info(::google::protobuf::int32 value) {
  
  info_ = value;
  // @@protoc_insertion_point(field_set:KVMessage.ResponseMessage.info)
}

// repeated .KVMessage.StringValue strvals = 10;
inline int ResponseMessage::strvals_size() const {
  return strvals_.size();
}
inline void ResponseMessage::clear_strvals() {
  strvals_.Clear();
}
inline const ::KVMessage::StringValue& ResponseMessage::strvals(int index) const {
  // @@protoc_insertion_point(field_get:KVMessage.ResponseMessage.strvals)
  return strvals_.Get(index);
}
inline ::KVMessage::StringValue* ResponseMessage::mutable_strvals(int index) {
  // @@protoc_insertion_point(field_mutable:KVMessage.ResponseMessage.strvals)
  return strvals_.Mutable(index);
}
inline ::KVMessage::StringValue* ResponseMessage::add_strvals() {
  // @@protoc_insertion_point(field_add:KVMessage.ResponseMessage.strvals)
  return strvals_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::KVMessage::StringValue >*
ResponseMessage::mutable_strvals() {
  // @@protoc_insertion_point(field_mutable_list:KVMessage.ResponseMessage.strvals)
  return &strvals_;
}
inline const ::google::protobuf::RepeatedPtrField< ::KVMessage::StringValue >&
ResponseMessage::strvals() const {
  // @@protoc_insertion_point(field_list:KVMessage.ResponseMessage.strvals)
  return strvals_;
}

// repeated .KVMessage.IntValue intvals = 11;
inline int ResponseMessage::intvals_size() const {
  return intvals_.size();
}
inline void ResponseMessage::clear_intvals() {
  intvals_.Clear();
}
inline const ::KVMessage::IntValue& ResponseMessage::intvals(int index) const {
  // @@protoc_insertion_point(field_get:KVMessage.ResponseMessage.intvals)
  return intvals_.Get(index);
}
inline ::KVMessage::IntValue* ResponseMessage::mutable_intvals(int index) {
  // @@protoc_insertion_point(field_mutable:KVMessage.ResponseMessage.intvals)
  return intvals_.Mutable(index);
}
inline ::KVMessage::IntValue* ResponseMessage::add_intvals() {
  // @@protoc_insertion_point(field_add:KVMessage.ResponseMessage.intvals)
  return intvals_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::KVMessage::IntValue >*
ResponseMessage::mutable_intvals() {
  // @@protoc_insertion_point(field_mutable_list:KVMessage.ResponseMessage.intvals)
  return &intvals_;
}
inline const ::google::protobuf::RepeatedPtrField< ::KVMessage::IntValue >&
ResponseMessage::intvals() const {
  // @@protoc_insertion_point(field_list:KVMessage.ResponseMessage.intvals)
  return intvals_;
}

// repeated .KVMessage.BinValue binvals = 12;
inline int ResponseMessage::binvals_size() const {
  return binvals_.size();
}
inline void ResponseMessage::clear_binvals() {
  binvals_.Clear();
}
inline const ::KVMessage::BinValue& ResponseMessage::binvals(int index) const {
  // @@protoc_insertion_point(field_get:KVMessage.ResponseMessage.binvals)
  return binvals_.Get(index);
}
inline ::KVMessage::BinValue* ResponseMessage::mutable_binvals(int index) {
  // @@protoc_insertion_point(field_mutable:KVMessage.ResponseMessage.binvals)
  return binvals_.Mutable(index);
}
inline ::KVMessage::BinValue* ResponseMessage::add_binvals() {
  // @@protoc_insertion_point(field_add:KVMessage.ResponseMessage.binvals)
  return binvals_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::KVMessage::BinValue >*
ResponseMessage::mutable_binvals() {
  // @@protoc_insertion_point(field_mutable_list:KVMessage.ResponseMessage.binvals)
  return &binvals_;
}
inline const ::google::protobuf::RepeatedPtrField< ::KVMessage::BinValue >&
ResponseMessage::binvals() const {
  // @@protoc_insertion_point(field_list:KVMessage.ResponseMessage.binvals)
  return binvals_;
}

// repeated .KVMessage.StringPair strpairs = 13;
inline int ResponseMessage::strpairs_size() const {
  return strpairs_.size();
}
inline void ResponseMessage::clear_strpairs() {
  strpairs_.Clear();
}
inline const ::KVMessage::StringPair& ResponseMessage::strpairs(int index) const {
  // @@protoc_insertion_point(field_get:KVMessage.ResponseMessage.strpairs)
  return strpairs_.Get(index);
}
inline ::KVMessage::StringPair* ResponseMessage::mutable_strpairs(int index) {
  // @@protoc_insertion_point(field_mutable:KVMessage.ResponseMessage.strpairs)
  return strpairs_.Mutable(index);
}
inline ::KVMessage::StringPair* ResponseMessage::add_strpairs() {
  // @@protoc_insertion_point(field_add:KVMessage.ResponseMessage.strpairs)
  return strpairs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::KVMessage::StringPair >*
ResponseMessage::mutable_strpairs() {
  // @@protoc_insertion_point(field_mutable_list:KVMessage.ResponseMessage.strpairs)
  return &strpairs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::KVMessage::StringPair >&
ResponseMessage::strpairs() const {
  // @@protoc_insertion_point(field_list:KVMessage.ResponseMessage.strpairs)
  return strpairs_;
}

// -------------------------------------------------------------------

// RequestMessage

// fixed32 msgno = 1;
inline void RequestMessage::clear_msgno() {
  msgno_ = 0u;
}
inline ::google::protobuf::uint32 RequestMessage::msgno() const {
  // @@protoc_insertion_point(field_get:KVMessage.RequestMessage.msgno)
  return msgno_;
}
inline void RequestMessage::set_msgno(::google::protobuf::uint32 value) {
  
  msgno_ = value;
  // @@protoc_insertion_point(field_set:KVMessage.RequestMessage.msgno)
}

// int32 version = 2;
inline void RequestMessage::clear_version() {
  version_ = 0;
}
inline ::google::protobuf::int32 RequestMessage::version() const {
  // @@protoc_insertion_point(field_get:KVMessage.RequestMessage.version)
  return version_;
}
inline void RequestMessage::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:KVMessage.RequestMessage.version)
}

// int32 cmd = 3;
inline void RequestMessage::clear_cmd() {
  cmd_ = 0;
}
inline ::google::protobuf::int32 RequestMessage::cmd() const {
  // @@protoc_insertion_point(field_get:KVMessage.RequestMessage.cmd)
  return cmd_;
}
inline void RequestMessage::set_cmd(::google::protobuf::int32 value) {
  
  cmd_ = value;
  // @@protoc_insertion_point(field_set:KVMessage.RequestMessage.cmd)
}

// int32 subcmd = 4;
inline void RequestMessage::clear_subcmd() {
  subcmd_ = 0;
}
inline ::google::protobuf::int32 RequestMessage::subcmd() const {
  // @@protoc_insertion_point(field_get:KVMessage.RequestMessage.subcmd)
  return subcmd_;
}
inline void RequestMessage::set_subcmd(::google::protobuf::int32 value) {
  
  subcmd_ = value;
  // @@protoc_insertion_point(field_set:KVMessage.RequestMessage.subcmd)
}

// string id = 5;
inline void RequestMessage::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestMessage::id() const {
  // @@protoc_insertion_point(field_get:KVMessage.RequestMessage.id)
  return id_.GetNoArena();
}
inline void RequestMessage::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KVMessage.RequestMessage.id)
}
#if LANG_CXX11
inline void RequestMessage::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KVMessage.RequestMessage.id)
}
#endif
inline void RequestMessage::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KVMessage.RequestMessage.id)
}
inline void RequestMessage::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KVMessage.RequestMessage.id)
}
inline ::std::string* RequestMessage::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:KVMessage.RequestMessage.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestMessage::release_id() {
  // @@protoc_insertion_point(field_release:KVMessage.RequestMessage.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestMessage::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:KVMessage.RequestMessage.id)
}

// string token = 6;
inline void RequestMessage::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestMessage::token() const {
  // @@protoc_insertion_point(field_get:KVMessage.RequestMessage.token)
  return token_.GetNoArena();
}
inline void RequestMessage::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KVMessage.RequestMessage.token)
}
#if LANG_CXX11
inline void RequestMessage::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KVMessage.RequestMessage.token)
}
#endif
inline void RequestMessage::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KVMessage.RequestMessage.token)
}
inline void RequestMessage::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KVMessage.RequestMessage.token)
}
inline ::std::string* RequestMessage::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:KVMessage.RequestMessage.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestMessage::release_token() {
  // @@protoc_insertion_point(field_release:KVMessage.RequestMessage.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestMessage::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:KVMessage.RequestMessage.token)
}

// repeated .KVMessage.StringValue strvals = 10;
inline int RequestMessage::strvals_size() const {
  return strvals_.size();
}
inline void RequestMessage::clear_strvals() {
  strvals_.Clear();
}
inline const ::KVMessage::StringValue& RequestMessage::strvals(int index) const {
  // @@protoc_insertion_point(field_get:KVMessage.RequestMessage.strvals)
  return strvals_.Get(index);
}
inline ::KVMessage::StringValue* RequestMessage::mutable_strvals(int index) {
  // @@protoc_insertion_point(field_mutable:KVMessage.RequestMessage.strvals)
  return strvals_.Mutable(index);
}
inline ::KVMessage::StringValue* RequestMessage::add_strvals() {
  // @@protoc_insertion_point(field_add:KVMessage.RequestMessage.strvals)
  return strvals_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::KVMessage::StringValue >*
RequestMessage::mutable_strvals() {
  // @@protoc_insertion_point(field_mutable_list:KVMessage.RequestMessage.strvals)
  return &strvals_;
}
inline const ::google::protobuf::RepeatedPtrField< ::KVMessage::StringValue >&
RequestMessage::strvals() const {
  // @@protoc_insertion_point(field_list:KVMessage.RequestMessage.strvals)
  return strvals_;
}

// repeated .KVMessage.IntValue intvals = 11;
inline int RequestMessage::intvals_size() const {
  return intvals_.size();
}
inline void RequestMessage::clear_intvals() {
  intvals_.Clear();
}
inline const ::KVMessage::IntValue& RequestMessage::intvals(int index) const {
  // @@protoc_insertion_point(field_get:KVMessage.RequestMessage.intvals)
  return intvals_.Get(index);
}
inline ::KVMessage::IntValue* RequestMessage::mutable_intvals(int index) {
  // @@protoc_insertion_point(field_mutable:KVMessage.RequestMessage.intvals)
  return intvals_.Mutable(index);
}
inline ::KVMessage::IntValue* RequestMessage::add_intvals() {
  // @@protoc_insertion_point(field_add:KVMessage.RequestMessage.intvals)
  return intvals_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::KVMessage::IntValue >*
RequestMessage::mutable_intvals() {
  // @@protoc_insertion_point(field_mutable_list:KVMessage.RequestMessage.intvals)
  return &intvals_;
}
inline const ::google::protobuf::RepeatedPtrField< ::KVMessage::IntValue >&
RequestMessage::intvals() const {
  // @@protoc_insertion_point(field_list:KVMessage.RequestMessage.intvals)
  return intvals_;
}

// repeated .KVMessage.BinValue binvals = 12;
inline int RequestMessage::binvals_size() const {
  return binvals_.size();
}
inline void RequestMessage::clear_binvals() {
  binvals_.Clear();
}
inline const ::KVMessage::BinValue& RequestMessage::binvals(int index) const {
  // @@protoc_insertion_point(field_get:KVMessage.RequestMessage.binvals)
  return binvals_.Get(index);
}
inline ::KVMessage::BinValue* RequestMessage::mutable_binvals(int index) {
  // @@protoc_insertion_point(field_mutable:KVMessage.RequestMessage.binvals)
  return binvals_.Mutable(index);
}
inline ::KVMessage::BinValue* RequestMessage::add_binvals() {
  // @@protoc_insertion_point(field_add:KVMessage.RequestMessage.binvals)
  return binvals_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::KVMessage::BinValue >*
RequestMessage::mutable_binvals() {
  // @@protoc_insertion_point(field_mutable_list:KVMessage.RequestMessage.binvals)
  return &binvals_;
}
inline const ::google::protobuf::RepeatedPtrField< ::KVMessage::BinValue >&
RequestMessage::binvals() const {
  // @@protoc_insertion_point(field_list:KVMessage.RequestMessage.binvals)
  return binvals_;
}

// repeated .KVMessage.StringPair strpairs = 13;
inline int RequestMessage::strpairs_size() const {
  return strpairs_.size();
}
inline void RequestMessage::clear_strpairs() {
  strpairs_.Clear();
}
inline const ::KVMessage::StringPair& RequestMessage::strpairs(int index) const {
  // @@protoc_insertion_point(field_get:KVMessage.RequestMessage.strpairs)
  return strpairs_.Get(index);
}
inline ::KVMessage::StringPair* RequestMessage::mutable_strpairs(int index) {
  // @@protoc_insertion_point(field_mutable:KVMessage.RequestMessage.strpairs)
  return strpairs_.Mutable(index);
}
inline ::KVMessage::StringPair* RequestMessage::add_strpairs() {
  // @@protoc_insertion_point(field_add:KVMessage.RequestMessage.strpairs)
  return strpairs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::KVMessage::StringPair >*
RequestMessage::mutable_strpairs() {
  // @@protoc_insertion_point(field_mutable_list:KVMessage.RequestMessage.strpairs)
  return &strpairs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::KVMessage::StringPair >&
RequestMessage::strpairs() const {
  // @@protoc_insertion_point(field_list:KVMessage.RequestMessage.strpairs)
  return strpairs_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace KVMessage

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::KVMessage::CmdID> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::KVMessage::SubCmdID> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::KVMessage::InfoCode> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::KVMessage::ErrorCode> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::KVMessage::KeyCode> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::KVMessage::RunStatus> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::KVMessage::RunFlag> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::KVMessage::FindByMode> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::KVMessage::VirudOP> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::KVMessage::DownloadOpCode> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::KVMessage::TaskResult> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_KVMessage_2eproto__INCLUDED
