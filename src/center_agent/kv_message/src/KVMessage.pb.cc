// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KVMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "KVMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace KVMessage {
class StringValueDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StringValue> {
} _StringValue_default_instance_;
class IntValueDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<IntValue> {
} _IntValue_default_instance_;
class BinValueDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BinValue> {
} _BinValue_default_instance_;
class StringPairDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StringPair> {
} _StringPair_default_instance_;
class ResponseMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ResponseMessage> {
} _ResponseMessage_default_instance_;
class RequestMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RequestMessage> {
} _RequestMessage_default_instance_;

namespace protobuf_KVMessage_2eproto {


void TableStruct::Shutdown() {
  _StringValue_default_instance_.Shutdown();
  _IntValue_default_instance_.Shutdown();
  _BinValue_default_instance_.Shutdown();
  _StringPair_default_instance_.Shutdown();
  _ResponseMessage_default_instance_.Shutdown();
  _RequestMessage_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _StringValue_default_instance_.DefaultConstruct();
  _IntValue_default_instance_.DefaultConstruct();
  _BinValue_default_instance_.DefaultConstruct();
  _StringPair_default_instance_.DefaultConstruct();
  _ResponseMessage_default_instance_.DefaultConstruct();
  _RequestMessage_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER

}  // namespace protobuf_KVMessage_2eproto

bool CmdID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 10:
      return true;
    default:
      return false;
  }
}

bool SubCmdID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

bool InfoCode_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

bool ErrorCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 10:
    case 11:
    case 12:
    case 13:
    case 20:
    case 21:
    case 22:
    case 23:
    case 26:
    case 27:
      return true;
    default:
      return false;
  }
}

bool KeyCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
      return true;
    default:
      return false;
  }
}

bool RunStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
      return true;
    default:
      return false;
  }
}

bool RunFlag_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
      return true;
    default:
      return false;
  }
}

bool FindByMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

bool VirudOP_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

bool DownloadOpCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

bool TaskResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringValue::kKeyFieldNumber;
const int StringValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringValue::StringValue()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_KVMessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:KVMessage.StringValue)
}
StringValue::StringValue(const StringValue& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  key_ = from.key_;
  // @@protoc_insertion_point(copy_constructor:KVMessage.StringValue)
}

void StringValue::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_ = 0;
  _cached_size_ = 0;
}

StringValue::~StringValue() {
  // @@protoc_insertion_point(destructor:KVMessage.StringValue)
  SharedDtor();
}

void StringValue::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StringValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const StringValue& StringValue::default_instance() {
  protobuf_KVMessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

StringValue* StringValue::New(::google::protobuf::Arena* arena) const {
  StringValue* n = new StringValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StringValue::Clear() {
// @@protoc_insertion_point(message_clear_start:KVMessage.StringValue)
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_ = 0;
}

bool StringValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KVMessage.StringValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 key = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KVMessage.StringValue.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KVMessage.StringValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KVMessage.StringValue)
  return false;
#undef DO_
}

void StringValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KVMessage.StringValue)
  // int32 key = 1;
  if (this->key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->key(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KVMessage.StringValue.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:KVMessage.StringValue)
}

size_t StringValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KVMessage.StringValue)
  size_t total_size = 0;

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // int32 key = 1;
  if (this->key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StringValue::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const StringValue*>(&from));
}

void StringValue::MergeFrom(const StringValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KVMessage.StringValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.key() != 0) {
    set_key(from.key());
  }
}

void StringValue::CopyFrom(const StringValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KVMessage.StringValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringValue::IsInitialized() const {
  return true;
}

void StringValue::Swap(StringValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringValue::InternalSwap(StringValue* other) {
  value_.Swap(&other->value_);
  std::swap(key_, other->key_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string StringValue::GetTypeName() const {
  return "KVMessage.StringValue";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StringValue

// int32 key = 1;
void StringValue::clear_key() {
  key_ = 0;
}
::google::protobuf::int32 StringValue::key() const {
  // @@protoc_insertion_point(field_get:KVMessage.StringValue.key)
  return key_;
}
void StringValue::set_key(::google::protobuf::int32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:KVMessage.StringValue.key)
}

// string value = 2;
void StringValue::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StringValue::value() const {
  // @@protoc_insertion_point(field_get:KVMessage.StringValue.value)
  return value_.GetNoArena();
}
void StringValue::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KVMessage.StringValue.value)
}
#if LANG_CXX11
void StringValue::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KVMessage.StringValue.value)
}
#endif
void StringValue::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KVMessage.StringValue.value)
}
void StringValue::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KVMessage.StringValue.value)
}
::std::string* StringValue::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:KVMessage.StringValue.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StringValue::release_value() {
  // @@protoc_insertion_point(field_release:KVMessage.StringValue.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StringValue::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:KVMessage.StringValue.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IntValue::kKeyFieldNumber;
const int IntValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IntValue::IntValue()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_KVMessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:KVMessage.IntValue)
}
IntValue::IntValue(const IntValue& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&key_, &from.key_,
    reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&key_) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:KVMessage.IntValue)
}

void IntValue::SharedCtor() {
  ::memset(&key_, 0, reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&key_) + sizeof(value_));
  _cached_size_ = 0;
}

IntValue::~IntValue() {
  // @@protoc_insertion_point(destructor:KVMessage.IntValue)
  SharedDtor();
}

void IntValue::SharedDtor() {
}

void IntValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const IntValue& IntValue::default_instance() {
  protobuf_KVMessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

IntValue* IntValue::New(::google::protobuf::Arena* arena) const {
  IntValue* n = new IntValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IntValue::Clear() {
// @@protoc_insertion_point(message_clear_start:KVMessage.IntValue)
  ::memset(&key_, 0, reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&key_) + sizeof(value_));
}

bool IntValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KVMessage.IntValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 key = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 value = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KVMessage.IntValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KVMessage.IntValue)
  return false;
#undef DO_
}

void IntValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KVMessage.IntValue)
  // int32 key = 1;
  if (this->key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->key(), output);
  }

  // int32 value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:KVMessage.IntValue)
}

size_t IntValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KVMessage.IntValue)
  size_t total_size = 0;

  // int32 key = 1;
  if (this->key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->key());
  }

  // int32 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IntValue::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const IntValue*>(&from));
}

void IntValue::MergeFrom(const IntValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KVMessage.IntValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.key() != 0) {
    set_key(from.key());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void IntValue::CopyFrom(const IntValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KVMessage.IntValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntValue::IsInitialized() const {
  return true;
}

void IntValue::Swap(IntValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IntValue::InternalSwap(IntValue* other) {
  std::swap(key_, other->key_);
  std::swap(value_, other->value_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string IntValue::GetTypeName() const {
  return "KVMessage.IntValue";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IntValue

// int32 key = 1;
void IntValue::clear_key() {
  key_ = 0;
}
::google::protobuf::int32 IntValue::key() const {
  // @@protoc_insertion_point(field_get:KVMessage.IntValue.key)
  return key_;
}
void IntValue::set_key(::google::protobuf::int32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:KVMessage.IntValue.key)
}

// int32 value = 2;
void IntValue::clear_value() {
  value_ = 0;
}
::google::protobuf::int32 IntValue::value() const {
  // @@protoc_insertion_point(field_get:KVMessage.IntValue.value)
  return value_;
}
void IntValue::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:KVMessage.IntValue.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BinValue::kKeyFieldNumber;
const int BinValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BinValue::BinValue()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_KVMessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:KVMessage.BinValue)
}
BinValue::BinValue(const BinValue& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  key_ = from.key_;
  // @@protoc_insertion_point(copy_constructor:KVMessage.BinValue)
}

void BinValue::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_ = 0;
  _cached_size_ = 0;
}

BinValue::~BinValue() {
  // @@protoc_insertion_point(destructor:KVMessage.BinValue)
  SharedDtor();
}

void BinValue::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BinValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const BinValue& BinValue::default_instance() {
  protobuf_KVMessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

BinValue* BinValue::New(::google::protobuf::Arena* arena) const {
  BinValue* n = new BinValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BinValue::Clear() {
// @@protoc_insertion_point(message_clear_start:KVMessage.BinValue)
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_ = 0;
}

bool BinValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KVMessage.BinValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 key = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KVMessage.BinValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KVMessage.BinValue)
  return false;
#undef DO_
}

void BinValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KVMessage.BinValue)
  // int32 key = 1;
  if (this->key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->key(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:KVMessage.BinValue)
}

size_t BinValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KVMessage.BinValue)
  size_t total_size = 0;

  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // int32 key = 1;
  if (this->key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BinValue::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BinValue*>(&from));
}

void BinValue::MergeFrom(const BinValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KVMessage.BinValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.key() != 0) {
    set_key(from.key());
  }
}

void BinValue::CopyFrom(const BinValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KVMessage.BinValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BinValue::IsInitialized() const {
  return true;
}

void BinValue::Swap(BinValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BinValue::InternalSwap(BinValue* other) {
  value_.Swap(&other->value_);
  std::swap(key_, other->key_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string BinValue::GetTypeName() const {
  return "KVMessage.BinValue";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BinValue

// int32 key = 1;
void BinValue::clear_key() {
  key_ = 0;
}
::google::protobuf::int32 BinValue::key() const {
  // @@protoc_insertion_point(field_get:KVMessage.BinValue.key)
  return key_;
}
void BinValue::set_key(::google::protobuf::int32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:KVMessage.BinValue.key)
}

// bytes value = 2;
void BinValue::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BinValue::value() const {
  // @@protoc_insertion_point(field_get:KVMessage.BinValue.value)
  return value_.GetNoArena();
}
void BinValue::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KVMessage.BinValue.value)
}
#if LANG_CXX11
void BinValue::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KVMessage.BinValue.value)
}
#endif
void BinValue::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KVMessage.BinValue.value)
}
void BinValue::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KVMessage.BinValue.value)
}
::std::string* BinValue::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:KVMessage.BinValue.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BinValue::release_value() {
  // @@protoc_insertion_point(field_release:KVMessage.BinValue.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BinValue::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:KVMessage.BinValue.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringPair::kKeyFieldNumber;
const int StringPair::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringPair::StringPair()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_KVMessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:KVMessage.StringPair)
}
StringPair::StringPair(const StringPair& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:KVMessage.StringPair)
}

void StringPair::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

StringPair::~StringPair() {
  // @@protoc_insertion_point(destructor:KVMessage.StringPair)
  SharedDtor();
}

void StringPair::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StringPair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const StringPair& StringPair::default_instance() {
  protobuf_KVMessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

StringPair* StringPair::New(::google::protobuf::Arena* arena) const {
  StringPair* n = new StringPair;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StringPair::Clear() {
// @@protoc_insertion_point(message_clear_start:KVMessage.StringPair)
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool StringPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KVMessage.StringPair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KVMessage.StringPair.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KVMessage.StringPair.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KVMessage.StringPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KVMessage.StringPair)
  return false;
#undef DO_
}

void StringPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KVMessage.StringPair)
  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KVMessage.StringPair.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KVMessage.StringPair.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:KVMessage.StringPair)
}

size_t StringPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KVMessage.StringPair)
  size_t total_size = 0;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StringPair::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const StringPair*>(&from));
}

void StringPair::MergeFrom(const StringPair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KVMessage.StringPair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void StringPair::CopyFrom(const StringPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KVMessage.StringPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringPair::IsInitialized() const {
  return true;
}

void StringPair::Swap(StringPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringPair::InternalSwap(StringPair* other) {
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string StringPair::GetTypeName() const {
  return "KVMessage.StringPair";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StringPair

// string key = 1;
void StringPair::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StringPair::key() const {
  // @@protoc_insertion_point(field_get:KVMessage.StringPair.key)
  return key_.GetNoArena();
}
void StringPair::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KVMessage.StringPair.key)
}
#if LANG_CXX11
void StringPair::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KVMessage.StringPair.key)
}
#endif
void StringPair::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KVMessage.StringPair.key)
}
void StringPair::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KVMessage.StringPair.key)
}
::std::string* StringPair::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:KVMessage.StringPair.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StringPair::release_key() {
  // @@protoc_insertion_point(field_release:KVMessage.StringPair.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StringPair::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:KVMessage.StringPair.key)
}

// string value = 2;
void StringPair::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StringPair::value() const {
  // @@protoc_insertion_point(field_get:KVMessage.StringPair.value)
  return value_.GetNoArena();
}
void StringPair::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KVMessage.StringPair.value)
}
#if LANG_CXX11
void StringPair::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KVMessage.StringPair.value)
}
#endif
void StringPair::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KVMessage.StringPair.value)
}
void StringPair::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KVMessage.StringPair.value)
}
::std::string* StringPair::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:KVMessage.StringPair.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StringPair::release_value() {
  // @@protoc_insertion_point(field_release:KVMessage.StringPair.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StringPair::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:KVMessage.StringPair.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseMessage::kErrorFieldNumber;
const int ResponseMessage::kInfoFieldNumber;
const int ResponseMessage::kStrvalsFieldNumber;
const int ResponseMessage::kIntvalsFieldNumber;
const int ResponseMessage::kBinvalsFieldNumber;
const int ResponseMessage::kStrpairsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseMessage::ResponseMessage()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_KVMessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:KVMessage.ResponseMessage)
}
ResponseMessage::ResponseMessage(const ResponseMessage& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      strvals_(from.strvals_),
      intvals_(from.intvals_),
      binvals_(from.binvals_),
      strpairs_(from.strpairs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&error_, &from.error_,
    reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&error_) + sizeof(info_));
  // @@protoc_insertion_point(copy_constructor:KVMessage.ResponseMessage)
}

void ResponseMessage::SharedCtor() {
  ::memset(&error_, 0, reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&error_) + sizeof(info_));
  _cached_size_ = 0;
}

ResponseMessage::~ResponseMessage() {
  // @@protoc_insertion_point(destructor:KVMessage.ResponseMessage)
  SharedDtor();
}

void ResponseMessage::SharedDtor() {
}

void ResponseMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ResponseMessage& ResponseMessage::default_instance() {
  protobuf_KVMessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResponseMessage* ResponseMessage::New(::google::protobuf::Arena* arena) const {
  ResponseMessage* n = new ResponseMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:KVMessage.ResponseMessage)
  strvals_.Clear();
  intvals_.Clear();
  binvals_.Clear();
  strpairs_.Clear();
  ::memset(&error_, 0, reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&error_) + sizeof(info_));
}

bool ResponseMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KVMessage.ResponseMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 info = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &info_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .KVMessage.StringValue strvals = 10;
      case 10: {
        if (tag == 82u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_strvals()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .KVMessage.IntValue intvals = 11;
      case 11: {
        if (tag == 90u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_intvals()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .KVMessage.BinValue binvals = 12;
      case 12: {
        if (tag == 98u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_binvals()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .KVMessage.StringPair strpairs = 13;
      case 13: {
        if (tag == 106u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_strpairs()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KVMessage.ResponseMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KVMessage.ResponseMessage)
  return false;
#undef DO_
}

void ResponseMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KVMessage.ResponseMessage)
  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // int32 info = 2;
  if (this->info() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->info(), output);
  }

  // repeated .KVMessage.StringValue strvals = 10;
  for (unsigned int i = 0, n = this->strvals_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      10, this->strvals(i), output);
  }

  // repeated .KVMessage.IntValue intvals = 11;
  for (unsigned int i = 0, n = this->intvals_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      11, this->intvals(i), output);
  }

  // repeated .KVMessage.BinValue binvals = 12;
  for (unsigned int i = 0, n = this->binvals_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      12, this->binvals(i), output);
  }

  // repeated .KVMessage.StringPair strpairs = 13;
  for (unsigned int i = 0, n = this->strpairs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      13, this->strpairs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:KVMessage.ResponseMessage)
}

size_t ResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KVMessage.ResponseMessage)
  size_t total_size = 0;

  // repeated .KVMessage.StringValue strvals = 10;
  {
    unsigned int count = this->strvals_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->strvals(i));
    }
  }

  // repeated .KVMessage.IntValue intvals = 11;
  {
    unsigned int count = this->intvals_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intvals(i));
    }
  }

  // repeated .KVMessage.BinValue binvals = 12;
  {
    unsigned int count = this->binvals_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->binvals(i));
    }
  }

  // repeated .KVMessage.StringPair strpairs = 13;
  {
    unsigned int count = this->strpairs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->strpairs(i));
    }
  }

  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  // int32 info = 2;
  if (this->info() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->info());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseMessage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ResponseMessage*>(&from));
}

void ResponseMessage::MergeFrom(const ResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KVMessage.ResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvals_.MergeFrom(from.strvals_);
  intvals_.MergeFrom(from.intvals_);
  binvals_.MergeFrom(from.binvals_);
  strpairs_.MergeFrom(from.strpairs_);
  if (from.error() != 0) {
    set_error(from.error());
  }
  if (from.info() != 0) {
    set_info(from.info());
  }
}

void ResponseMessage::CopyFrom(const ResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KVMessage.ResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseMessage::IsInitialized() const {
  return true;
}

void ResponseMessage::Swap(ResponseMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseMessage::InternalSwap(ResponseMessage* other) {
  strvals_.UnsafeArenaSwap(&other->strvals_);
  intvals_.UnsafeArenaSwap(&other->intvals_);
  binvals_.UnsafeArenaSwap(&other->binvals_);
  strpairs_.UnsafeArenaSwap(&other->strpairs_);
  std::swap(error_, other->error_);
  std::swap(info_, other->info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string ResponseMessage::GetTypeName() const {
  return "KVMessage.ResponseMessage";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResponseMessage

// int32 error = 1;
void ResponseMessage::clear_error() {
  error_ = 0;
}
::google::protobuf::int32 ResponseMessage::error() const {
  // @@protoc_insertion_point(field_get:KVMessage.ResponseMessage.error)
  return error_;
}
void ResponseMessage::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:KVMessage.ResponseMessage.error)
}

// int32 info = 2;
void ResponseMessage::clear_info() {
  info_ = 0;
}
::google::protobuf::int32 ResponseMessage::info() const {
  // @@protoc_insertion_point(field_get:KVMessage.ResponseMessage.info)
  return info_;
}
void ResponseMessage::set_info(::google::protobuf::int32 value) {
  
  info_ = value;
  // @@protoc_insertion_point(field_set:KVMessage.ResponseMessage.info)
}

// repeated .KVMessage.StringValue strvals = 10;
int ResponseMessage::strvals_size() const {
  return strvals_.size();
}
void ResponseMessage::clear_strvals() {
  strvals_.Clear();
}
const ::KVMessage::StringValue& ResponseMessage::strvals(int index) const {
  // @@protoc_insertion_point(field_get:KVMessage.ResponseMessage.strvals)
  return strvals_.Get(index);
}
::KVMessage::StringValue* ResponseMessage::mutable_strvals(int index) {
  // @@protoc_insertion_point(field_mutable:KVMessage.ResponseMessage.strvals)
  return strvals_.Mutable(index);
}
::KVMessage::StringValue* ResponseMessage::add_strvals() {
  // @@protoc_insertion_point(field_add:KVMessage.ResponseMessage.strvals)
  return strvals_.Add();
}
::google::protobuf::RepeatedPtrField< ::KVMessage::StringValue >*
ResponseMessage::mutable_strvals() {
  // @@protoc_insertion_point(field_mutable_list:KVMessage.ResponseMessage.strvals)
  return &strvals_;
}
const ::google::protobuf::RepeatedPtrField< ::KVMessage::StringValue >&
ResponseMessage::strvals() const {
  // @@protoc_insertion_point(field_list:KVMessage.ResponseMessage.strvals)
  return strvals_;
}

// repeated .KVMessage.IntValue intvals = 11;
int ResponseMessage::intvals_size() const {
  return intvals_.size();
}
void ResponseMessage::clear_intvals() {
  intvals_.Clear();
}
const ::KVMessage::IntValue& ResponseMessage::intvals(int index) const {
  // @@protoc_insertion_point(field_get:KVMessage.ResponseMessage.intvals)
  return intvals_.Get(index);
}
::KVMessage::IntValue* ResponseMessage::mutable_intvals(int index) {
  // @@protoc_insertion_point(field_mutable:KVMessage.ResponseMessage.intvals)
  return intvals_.Mutable(index);
}
::KVMessage::IntValue* ResponseMessage::add_intvals() {
  // @@protoc_insertion_point(field_add:KVMessage.ResponseMessage.intvals)
  return intvals_.Add();
}
::google::protobuf::RepeatedPtrField< ::KVMessage::IntValue >*
ResponseMessage::mutable_intvals() {
  // @@protoc_insertion_point(field_mutable_list:KVMessage.ResponseMessage.intvals)
  return &intvals_;
}
const ::google::protobuf::RepeatedPtrField< ::KVMessage::IntValue >&
ResponseMessage::intvals() const {
  // @@protoc_insertion_point(field_list:KVMessage.ResponseMessage.intvals)
  return intvals_;
}

// repeated .KVMessage.BinValue binvals = 12;
int ResponseMessage::binvals_size() const {
  return binvals_.size();
}
void ResponseMessage::clear_binvals() {
  binvals_.Clear();
}
const ::KVMessage::BinValue& ResponseMessage::binvals(int index) const {
  // @@protoc_insertion_point(field_get:KVMessage.ResponseMessage.binvals)
  return binvals_.Get(index);
}
::KVMessage::BinValue* ResponseMessage::mutable_binvals(int index) {
  // @@protoc_insertion_point(field_mutable:KVMessage.ResponseMessage.binvals)
  return binvals_.Mutable(index);
}
::KVMessage::BinValue* ResponseMessage::add_binvals() {
  // @@protoc_insertion_point(field_add:KVMessage.ResponseMessage.binvals)
  return binvals_.Add();
}
::google::protobuf::RepeatedPtrField< ::KVMessage::BinValue >*
ResponseMessage::mutable_binvals() {
  // @@protoc_insertion_point(field_mutable_list:KVMessage.ResponseMessage.binvals)
  return &binvals_;
}
const ::google::protobuf::RepeatedPtrField< ::KVMessage::BinValue >&
ResponseMessage::binvals() const {
  // @@protoc_insertion_point(field_list:KVMessage.ResponseMessage.binvals)
  return binvals_;
}

// repeated .KVMessage.StringPair strpairs = 13;
int ResponseMessage::strpairs_size() const {
  return strpairs_.size();
}
void ResponseMessage::clear_strpairs() {
  strpairs_.Clear();
}
const ::KVMessage::StringPair& ResponseMessage::strpairs(int index) const {
  // @@protoc_insertion_point(field_get:KVMessage.ResponseMessage.strpairs)
  return strpairs_.Get(index);
}
::KVMessage::StringPair* ResponseMessage::mutable_strpairs(int index) {
  // @@protoc_insertion_point(field_mutable:KVMessage.ResponseMessage.strpairs)
  return strpairs_.Mutable(index);
}
::KVMessage::StringPair* ResponseMessage::add_strpairs() {
  // @@protoc_insertion_point(field_add:KVMessage.ResponseMessage.strpairs)
  return strpairs_.Add();
}
::google::protobuf::RepeatedPtrField< ::KVMessage::StringPair >*
ResponseMessage::mutable_strpairs() {
  // @@protoc_insertion_point(field_mutable_list:KVMessage.ResponseMessage.strpairs)
  return &strpairs_;
}
const ::google::protobuf::RepeatedPtrField< ::KVMessage::StringPair >&
ResponseMessage::strpairs() const {
  // @@protoc_insertion_point(field_list:KVMessage.ResponseMessage.strpairs)
  return strpairs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestMessage::kMsgnoFieldNumber;
const int RequestMessage::kVersionFieldNumber;
const int RequestMessage::kCmdFieldNumber;
const int RequestMessage::kSubcmdFieldNumber;
const int RequestMessage::kIdFieldNumber;
const int RequestMessage::kTokenFieldNumber;
const int RequestMessage::kStrvalsFieldNumber;
const int RequestMessage::kIntvalsFieldNumber;
const int RequestMessage::kBinvalsFieldNumber;
const int RequestMessage::kStrpairsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestMessage::RequestMessage()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_KVMessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:KVMessage.RequestMessage)
}
RequestMessage::RequestMessage(const RequestMessage& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      strvals_(from.strvals_),
      intvals_(from.intvals_),
      binvals_(from.binvals_),
      strpairs_(from.strpairs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ::memcpy(&msgno_, &from.msgno_,
    reinterpret_cast<char*>(&subcmd_) -
    reinterpret_cast<char*>(&msgno_) + sizeof(subcmd_));
  // @@protoc_insertion_point(copy_constructor:KVMessage.RequestMessage)
}

void RequestMessage::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgno_, 0, reinterpret_cast<char*>(&subcmd_) -
    reinterpret_cast<char*>(&msgno_) + sizeof(subcmd_));
  _cached_size_ = 0;
}

RequestMessage::~RequestMessage() {
  // @@protoc_insertion_point(destructor:KVMessage.RequestMessage)
  SharedDtor();
}

void RequestMessage::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RequestMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const RequestMessage& RequestMessage::default_instance() {
  protobuf_KVMessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

RequestMessage* RequestMessage::New(::google::protobuf::Arena* arena) const {
  RequestMessage* n = new RequestMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:KVMessage.RequestMessage)
  strvals_.Clear();
  intvals_.Clear();
  binvals_.Clear();
  strpairs_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgno_, 0, reinterpret_cast<char*>(&subcmd_) -
    reinterpret_cast<char*>(&msgno_) + sizeof(subcmd_));
}

bool RequestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KVMessage.RequestMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed32 msgno = 1;
      case 1: {
        if (tag == 13u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &msgno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 version = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cmd = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 subcmd = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &subcmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KVMessage.RequestMessage.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string token = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KVMessage.RequestMessage.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .KVMessage.StringValue strvals = 10;
      case 10: {
        if (tag == 82u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_strvals()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .KVMessage.IntValue intvals = 11;
      case 11: {
        if (tag == 90u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_intvals()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .KVMessage.BinValue binvals = 12;
      case 12: {
        if (tag == 98u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_binvals()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .KVMessage.StringPair strpairs = 13;
      case 13: {
        if (tag == 106u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_strpairs()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KVMessage.RequestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KVMessage.RequestMessage)
  return false;
#undef DO_
}

void RequestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KVMessage.RequestMessage)
  // fixed32 msgno = 1;
  if (this->msgno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->msgno(), output);
  }

  // int32 version = 2;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->version(), output);
  }

  // int32 cmd = 3;
  if (this->cmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->cmd(), output);
  }

  // int32 subcmd = 4;
  if (this->subcmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->subcmd(), output);
  }

  // string id = 5;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KVMessage.RequestMessage.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->id(), output);
  }

  // string token = 6;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KVMessage.RequestMessage.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->token(), output);
  }

  // repeated .KVMessage.StringValue strvals = 10;
  for (unsigned int i = 0, n = this->strvals_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      10, this->strvals(i), output);
  }

  // repeated .KVMessage.IntValue intvals = 11;
  for (unsigned int i = 0, n = this->intvals_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      11, this->intvals(i), output);
  }

  // repeated .KVMessage.BinValue binvals = 12;
  for (unsigned int i = 0, n = this->binvals_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      12, this->binvals(i), output);
  }

  // repeated .KVMessage.StringPair strpairs = 13;
  for (unsigned int i = 0, n = this->strpairs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      13, this->strpairs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:KVMessage.RequestMessage)
}

size_t RequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KVMessage.RequestMessage)
  size_t total_size = 0;

  // repeated .KVMessage.StringValue strvals = 10;
  {
    unsigned int count = this->strvals_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->strvals(i));
    }
  }

  // repeated .KVMessage.IntValue intvals = 11;
  {
    unsigned int count = this->intvals_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intvals(i));
    }
  }

  // repeated .KVMessage.BinValue binvals = 12;
  {
    unsigned int count = this->binvals_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->binvals(i));
    }
  }

  // repeated .KVMessage.StringPair strpairs = 13;
  {
    unsigned int count = this->strpairs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->strpairs(i));
    }
  }

  // string id = 5;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string token = 6;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // fixed32 msgno = 1;
  if (this->msgno() != 0) {
    total_size += 1 + 4;
  }

  // int32 version = 2;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  // int32 cmd = 3;
  if (this->cmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cmd());
  }

  // int32 subcmd = 4;
  if (this->subcmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->subcmd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestMessage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const RequestMessage*>(&from));
}

void RequestMessage::MergeFrom(const RequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KVMessage.RequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strvals_.MergeFrom(from.strvals_);
  intvals_.MergeFrom(from.intvals_);
  binvals_.MergeFrom(from.binvals_);
  strpairs_.MergeFrom(from.strpairs_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.msgno() != 0) {
    set_msgno(from.msgno());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.cmd() != 0) {
    set_cmd(from.cmd());
  }
  if (from.subcmd() != 0) {
    set_subcmd(from.subcmd());
  }
}

void RequestMessage::CopyFrom(const RequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KVMessage.RequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestMessage::IsInitialized() const {
  return true;
}

void RequestMessage::Swap(RequestMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestMessage::InternalSwap(RequestMessage* other) {
  strvals_.UnsafeArenaSwap(&other->strvals_);
  intvals_.UnsafeArenaSwap(&other->intvals_);
  binvals_.UnsafeArenaSwap(&other->binvals_);
  strpairs_.UnsafeArenaSwap(&other->strpairs_);
  id_.Swap(&other->id_);
  token_.Swap(&other->token_);
  std::swap(msgno_, other->msgno_);
  std::swap(version_, other->version_);
  std::swap(cmd_, other->cmd_);
  std::swap(subcmd_, other->subcmd_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string RequestMessage::GetTypeName() const {
  return "KVMessage.RequestMessage";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RequestMessage

// fixed32 msgno = 1;
void RequestMessage::clear_msgno() {
  msgno_ = 0u;
}
::google::protobuf::uint32 RequestMessage::msgno() const {
  // @@protoc_insertion_point(field_get:KVMessage.RequestMessage.msgno)
  return msgno_;
}
void RequestMessage::set_msgno(::google::protobuf::uint32 value) {
  
  msgno_ = value;
  // @@protoc_insertion_point(field_set:KVMessage.RequestMessage.msgno)
}

// int32 version = 2;
void RequestMessage::clear_version() {
  version_ = 0;
}
::google::protobuf::int32 RequestMessage::version() const {
  // @@protoc_insertion_point(field_get:KVMessage.RequestMessage.version)
  return version_;
}
void RequestMessage::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:KVMessage.RequestMessage.version)
}

// int32 cmd = 3;
void RequestMessage::clear_cmd() {
  cmd_ = 0;
}
::google::protobuf::int32 RequestMessage::cmd() const {
  // @@protoc_insertion_point(field_get:KVMessage.RequestMessage.cmd)
  return cmd_;
}
void RequestMessage::set_cmd(::google::protobuf::int32 value) {
  
  cmd_ = value;
  // @@protoc_insertion_point(field_set:KVMessage.RequestMessage.cmd)
}

// int32 subcmd = 4;
void RequestMessage::clear_subcmd() {
  subcmd_ = 0;
}
::google::protobuf::int32 RequestMessage::subcmd() const {
  // @@protoc_insertion_point(field_get:KVMessage.RequestMessage.subcmd)
  return subcmd_;
}
void RequestMessage::set_subcmd(::google::protobuf::int32 value) {
  
  subcmd_ = value;
  // @@protoc_insertion_point(field_set:KVMessage.RequestMessage.subcmd)
}

// string id = 5;
void RequestMessage::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RequestMessage::id() const {
  // @@protoc_insertion_point(field_get:KVMessage.RequestMessage.id)
  return id_.GetNoArena();
}
void RequestMessage::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KVMessage.RequestMessage.id)
}
#if LANG_CXX11
void RequestMessage::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KVMessage.RequestMessage.id)
}
#endif
void RequestMessage::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KVMessage.RequestMessage.id)
}
void RequestMessage::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KVMessage.RequestMessage.id)
}
::std::string* RequestMessage::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:KVMessage.RequestMessage.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestMessage::release_id() {
  // @@protoc_insertion_point(field_release:KVMessage.RequestMessage.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestMessage::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:KVMessage.RequestMessage.id)
}

// string token = 6;
void RequestMessage::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RequestMessage::token() const {
  // @@protoc_insertion_point(field_get:KVMessage.RequestMessage.token)
  return token_.GetNoArena();
}
void RequestMessage::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KVMessage.RequestMessage.token)
}
#if LANG_CXX11
void RequestMessage::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KVMessage.RequestMessage.token)
}
#endif
void RequestMessage::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KVMessage.RequestMessage.token)
}
void RequestMessage::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KVMessage.RequestMessage.token)
}
::std::string* RequestMessage::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:KVMessage.RequestMessage.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestMessage::release_token() {
  // @@protoc_insertion_point(field_release:KVMessage.RequestMessage.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestMessage::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:KVMessage.RequestMessage.token)
}

// repeated .KVMessage.StringValue strvals = 10;
int RequestMessage::strvals_size() const {
  return strvals_.size();
}
void RequestMessage::clear_strvals() {
  strvals_.Clear();
}
const ::KVMessage::StringValue& RequestMessage::strvals(int index) const {
  // @@protoc_insertion_point(field_get:KVMessage.RequestMessage.strvals)
  return strvals_.Get(index);
}
::KVMessage::StringValue* RequestMessage::mutable_strvals(int index) {
  // @@protoc_insertion_point(field_mutable:KVMessage.RequestMessage.strvals)
  return strvals_.Mutable(index);
}
::KVMessage::StringValue* RequestMessage::add_strvals() {
  // @@protoc_insertion_point(field_add:KVMessage.RequestMessage.strvals)
  return strvals_.Add();
}
::google::protobuf::RepeatedPtrField< ::KVMessage::StringValue >*
RequestMessage::mutable_strvals() {
  // @@protoc_insertion_point(field_mutable_list:KVMessage.RequestMessage.strvals)
  return &strvals_;
}
const ::google::protobuf::RepeatedPtrField< ::KVMessage::StringValue >&
RequestMessage::strvals() const {
  // @@protoc_insertion_point(field_list:KVMessage.RequestMessage.strvals)
  return strvals_;
}

// repeated .KVMessage.IntValue intvals = 11;
int RequestMessage::intvals_size() const {
  return intvals_.size();
}
void RequestMessage::clear_intvals() {
  intvals_.Clear();
}
const ::KVMessage::IntValue& RequestMessage::intvals(int index) const {
  // @@protoc_insertion_point(field_get:KVMessage.RequestMessage.intvals)
  return intvals_.Get(index);
}
::KVMessage::IntValue* RequestMessage::mutable_intvals(int index) {
  // @@protoc_insertion_point(field_mutable:KVMessage.RequestMessage.intvals)
  return intvals_.Mutable(index);
}
::KVMessage::IntValue* RequestMessage::add_intvals() {
  // @@protoc_insertion_point(field_add:KVMessage.RequestMessage.intvals)
  return intvals_.Add();
}
::google::protobuf::RepeatedPtrField< ::KVMessage::IntValue >*
RequestMessage::mutable_intvals() {
  // @@protoc_insertion_point(field_mutable_list:KVMessage.RequestMessage.intvals)
  return &intvals_;
}
const ::google::protobuf::RepeatedPtrField< ::KVMessage::IntValue >&
RequestMessage::intvals() const {
  // @@protoc_insertion_point(field_list:KVMessage.RequestMessage.intvals)
  return intvals_;
}

// repeated .KVMessage.BinValue binvals = 12;
int RequestMessage::binvals_size() const {
  return binvals_.size();
}
void RequestMessage::clear_binvals() {
  binvals_.Clear();
}
const ::KVMessage::BinValue& RequestMessage::binvals(int index) const {
  // @@protoc_insertion_point(field_get:KVMessage.RequestMessage.binvals)
  return binvals_.Get(index);
}
::KVMessage::BinValue* RequestMessage::mutable_binvals(int index) {
  // @@protoc_insertion_point(field_mutable:KVMessage.RequestMessage.binvals)
  return binvals_.Mutable(index);
}
::KVMessage::BinValue* RequestMessage::add_binvals() {
  // @@protoc_insertion_point(field_add:KVMessage.RequestMessage.binvals)
  return binvals_.Add();
}
::google::protobuf::RepeatedPtrField< ::KVMessage::BinValue >*
RequestMessage::mutable_binvals() {
  // @@protoc_insertion_point(field_mutable_list:KVMessage.RequestMessage.binvals)
  return &binvals_;
}
const ::google::protobuf::RepeatedPtrField< ::KVMessage::BinValue >&
RequestMessage::binvals() const {
  // @@protoc_insertion_point(field_list:KVMessage.RequestMessage.binvals)
  return binvals_;
}

// repeated .KVMessage.StringPair strpairs = 13;
int RequestMessage::strpairs_size() const {
  return strpairs_.size();
}
void RequestMessage::clear_strpairs() {
  strpairs_.Clear();
}
const ::KVMessage::StringPair& RequestMessage::strpairs(int index) const {
  // @@protoc_insertion_point(field_get:KVMessage.RequestMessage.strpairs)
  return strpairs_.Get(index);
}
::KVMessage::StringPair* RequestMessage::mutable_strpairs(int index) {
  // @@protoc_insertion_point(field_mutable:KVMessage.RequestMessage.strpairs)
  return strpairs_.Mutable(index);
}
::KVMessage::StringPair* RequestMessage::add_strpairs() {
  // @@protoc_insertion_point(field_add:KVMessage.RequestMessage.strpairs)
  return strpairs_.Add();
}
::google::protobuf::RepeatedPtrField< ::KVMessage::StringPair >*
RequestMessage::mutable_strpairs() {
  // @@protoc_insertion_point(field_mutable_list:KVMessage.RequestMessage.strpairs)
  return &strpairs_;
}
const ::google::protobuf::RepeatedPtrField< ::KVMessage::StringPair >&
RequestMessage::strpairs() const {
  // @@protoc_insertion_point(field_list:KVMessage.RequestMessage.strpairs)
  return strpairs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace KVMessage

// @@protoc_insertion_point(global_scope)
