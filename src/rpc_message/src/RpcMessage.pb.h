// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RpcMessage.proto

#ifndef PROTOBUF_RpcMessage_2eproto__INCLUDED
#define PROTOBUF_RpcMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)
namespace nms_RpcMessage {
class BinValue;
class BinValueDefaultTypeInternal;
extern BinValueDefaultTypeInternal _BinValue_default_instance_;
class IntValue;
class IntValueDefaultTypeInternal;
extern IntValueDefaultTypeInternal _IntValue_default_instance_;
class RpcMessage;
class RpcMessageDefaultTypeInternal;
extern RpcMessageDefaultTypeInternal _RpcMessage_default_instance_;
class StringPair;
class StringPairDefaultTypeInternal;
extern StringPairDefaultTypeInternal _StringPair_default_instance_;
class StringValue;
class StringValueDefaultTypeInternal;
extern StringValueDefaultTypeInternal _StringValue_default_instance_;
}  // namespace nms_RpcMessage

namespace nms_RpcMessage {

namespace protobuf_RpcMessage_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_RpcMessage_2eproto

enum Rpc_CmdID {
  RPC_ECHO = 0,
  RPC_NOTIFY = 1,
  RPC_CLIENT_DO = 2,
  RPC_QUERY = 10,
  RPC_SERVER_DO = 11,
  RPC_REPORT = 12,
  
  /* ------------------------------------------- */
  RPC_AV_SDK_CMD = 1234,
  /* ------------------------------------------- */

  /* ------------------------------------------- */
  RPC_SRV_TO_SDK_DATA = 2048,
  /* ------------------------------------------- */

  Rpc_CmdID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Rpc_CmdID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Rpc_CmdID_IsValid(int value);
const Rpc_CmdID Rpc_CmdID_MIN = RPC_ECHO;
const Rpc_CmdID Rpc_CmdID_MAX = RPC_REPORT;
const int Rpc_CmdID_ARRAYSIZE = Rpc_CmdID_MAX + 1;

enum Rpc_SubCmdID {
  RPC_SUBCMD_STUB = 0,
  RPC_ECHO_TEST = 0,
  RPC_NOTIFY_STATUS = 0,
  RPC_CLIENT_DO_TEST = 0,
  RPC_QUERY_STATUS = 0,
  RPC_SERVER_DO_TEST = 0,
  RPC_REPORT_TEST = 0,
  RPC_START_SCAN = 1,
  RPC_STOP_SCAN = 2,
  RPC_PAUSE_SCAN = 3,
  RPC_RESUME_SCAN = 4,
  RPC_GET_SCAN_INFORMATION = 5,
  RPC_SHUT_DOWN = 6,
  RPC_GET_VIRUSLIB_DATE = 7,
  RPC_SCAN_SPEED = 8,
  RPC_ENABLE_GUARD = 21,
  RPC_GET_GUARD_STATE = 22,
  RPC_ENABLE_FIREWALL = 23,
  RPC_GET_FIREWALL_STATE = 24,
  RPC_ENABLE_HIPS = 25,
  RPC_GET_HIPS_STATE = 26,
  RPC_TEST_CENTER = 41,
  RPC_REMOVE_CENTERURL = 42,
  RPC_ADD_CENTERURL = 43,
  RPC_UPDATE_CENTER = 44,
  RPC_QUERY_CENTERLIST = 45,
  RPC_SET_CENTERURL = 46,
  RPC_RECONNNECT_CENTER = 47,
  RPC_QUERY_IS_CONNECTED = 48,
  RPC_QUERY_COMPANY_NAME = 49,
  RPC_UPDATE = 50,

  /* ------------------------------------------- */
  RPC_AV_SDK_SUB_CMD = 1234,
  /* ------------------------------------------- */

  /* ------------------------------------------- */
  RPC_SDK_COMMON = 2048,
  /* ------------------------------------------- */

  Rpc_SubCmdID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Rpc_SubCmdID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Rpc_SubCmdID_IsValid(int value);
const Rpc_SubCmdID Rpc_SubCmdID_MIN = RPC_SUBCMD_STUB;
const Rpc_SubCmdID Rpc_SubCmdID_MAX = RPC_UPDATE;
const int Rpc_SubCmdID_ARRAYSIZE = Rpc_SubCmdID_MAX + 1;

enum ErrorCode {
  RPC_OK = 0,
  RPC__UNSUPPORT = 1,
  RPC__NEED_LOGIN = 2,
  RPC__UNDEFINE = 10,
  RPC__BAD_ARG = 11,
  RPC__BAD_DATA = 12,
  ErrorCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ErrorCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ErrorCode_IsValid(int value);
const ErrorCode ErrorCode_MIN = RPC_OK;
const ErrorCode ErrorCode_MAX = RPC__BAD_DATA;
const int ErrorCode_ARRAYSIZE = ErrorCode_MAX + 1;

enum Rpc_KeyCode {
  RPC_TOKEN = 0,
  RPC_RESPKEY_TASK = 1,
  RPCKEY_INT = 3,
  RPCKEY_INT2 = 4,
  RPCKEY_INT3 = 5,
  RPCKEY_INT4 = 6,
  RPCKEY_INT5 = 7,
  RPCKEY_BOOL = 11,
  RPCKEY_BOOL2 = 12,
  RPCKEY_BOOL3 = 13,
  RPCKEY_BOOL4 = 14,
  RPCKEY_BOOL5 = 15,
  RPCKEY_CHAR = 21,
  RPCKEY_CHAR2 = 22,
  RPCKEY_CHAR3 = 23,
  RPCKEY_CHAR4 = 24,
  RPCKEY_CHAR5 = 25,

  /* ------------------------------------------- */
  RPC_AV_SDK_REQ_ID = 1234,
  RPC_AV_SDK_REQ_TYPE,
  RPC_AV_SDK_REQ_DATA,
  RPC_AV_SDK_CHECKSUM,
  /* ------------------------------------------- */

  Rpc_KeyCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Rpc_KeyCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Rpc_KeyCode_IsValid(int value);
const Rpc_KeyCode Rpc_KeyCode_MIN = RPC_TOKEN;
const Rpc_KeyCode Rpc_KeyCode_MAX = RPCKEY_CHAR5;
const int Rpc_KeyCode_ARRAYSIZE = Rpc_KeyCode_MAX + 1;

enum Rpc_RunStatus {
  RPC_STATUS_NONE = 0,
  RPC_STATUS_SCAN = 1,
  RPC_STATUS_FILEMON = 2,
  RPC_STATUS_FIREWALL = 4,
  RPC_STATUS_HIPS = 8,
  RPC_STATUS_UPDATE = 16,
  RPC_STATUS_REPAIRLEAK = 32,
  RPC_STATUS_STUDYMODEL = 64,
  RPC_STATUS_WORKMODEL = 128,
  RPC_STATUS_DENYMODEL = 256,
  Rpc_RunStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Rpc_RunStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Rpc_RunStatus_IsValid(int value);
const Rpc_RunStatus Rpc_RunStatus_MIN = RPC_STATUS_NONE;
const Rpc_RunStatus Rpc_RunStatus_MAX = RPC_STATUS_DENYMODEL;
const int Rpc_RunStatus_ARRAYSIZE = Rpc_RunStatus_MAX + 1;

// ===================================================================

class StringValue : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:nms_RpcMessage.StringValue) */ {
 public:
  StringValue();
  virtual ~StringValue();

  StringValue(const StringValue& from);

  inline StringValue& operator=(const StringValue& from) {
    CopyFrom(from);
    return *this;
  }

  static const StringValue& default_instance();

  static inline const StringValue* internal_default_instance() {
    return reinterpret_cast<const StringValue*>(
               &_StringValue_default_instance_);
  }

  void Swap(StringValue* other);

  // implements Message ----------------------------------------------

  inline StringValue* New() const PROTOBUF_FINAL { return New(NULL); }

  StringValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const StringValue& from);
  void MergeFrom(const StringValue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StringValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // int32 key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::int32 key() const;
  void set_key(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:nms_RpcMessage.StringValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::int32 key_;
  mutable int _cached_size_;
  friend struct  protobuf_RpcMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IntValue : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:nms_RpcMessage.IntValue) */ {
 public:
  IntValue();
  virtual ~IntValue();

  IntValue(const IntValue& from);

  inline IntValue& operator=(const IntValue& from) {
    CopyFrom(from);
    return *this;
  }

  static const IntValue& default_instance();

  static inline const IntValue* internal_default_instance() {
    return reinterpret_cast<const IntValue*>(
               &_IntValue_default_instance_);
  }

  void Swap(IntValue* other);

  // implements Message ----------------------------------------------

  inline IntValue* New() const PROTOBUF_FINAL { return New(NULL); }

  IntValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IntValue& from);
  void MergeFrom(const IntValue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IntValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::int32 key() const;
  void set_key(::google::protobuf::int32 value);

  // int32 value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:nms_RpcMessage.IntValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::int32 key_;
  ::google::protobuf::int32 value_;
  mutable int _cached_size_;
  friend struct  protobuf_RpcMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BinValue : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:nms_RpcMessage.BinValue) */ {
 public:
  BinValue();
  virtual ~BinValue();

  BinValue(const BinValue& from);

  inline BinValue& operator=(const BinValue& from) {
    CopyFrom(from);
    return *this;
  }

  static const BinValue& default_instance();

  static inline const BinValue* internal_default_instance() {
    return reinterpret_cast<const BinValue*>(
               &_BinValue_default_instance_);
  }

  void Swap(BinValue* other);

  // implements Message ----------------------------------------------

  inline BinValue* New() const PROTOBUF_FINAL { return New(NULL); }

  BinValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const BinValue& from);
  void MergeFrom(const BinValue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BinValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // int32 key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::int32 key() const;
  void set_key(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:nms_RpcMessage.BinValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::int32 key_;
  mutable int _cached_size_;
  friend struct  protobuf_RpcMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StringPair : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:nms_RpcMessage.StringPair) */ {
 public:
  StringPair();
  virtual ~StringPair();

  StringPair(const StringPair& from);

  inline StringPair& operator=(const StringPair& from) {
    CopyFrom(from);
    return *this;
  }

  static const StringPair& default_instance();

  static inline const StringPair* internal_default_instance() {
    return reinterpret_cast<const StringPair*>(
               &_StringPair_default_instance_);
  }

  void Swap(StringPair* other);

  // implements Message ----------------------------------------------

  inline StringPair* New() const PROTOBUF_FINAL { return New(NULL); }

  StringPair* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const StringPair& from);
  void MergeFrom(const StringPair& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StringPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // string value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:nms_RpcMessage.StringPair)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable int _cached_size_;
  friend struct  protobuf_RpcMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RpcMessage : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:nms_RpcMessage.RpcMessage) */ {
 public:
  RpcMessage();
  virtual ~RpcMessage();

  RpcMessage(const RpcMessage& from);

  inline RpcMessage& operator=(const RpcMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const RpcMessage& default_instance();

  static inline const RpcMessage* internal_default_instance() {
    return reinterpret_cast<const RpcMessage*>(
               &_RpcMessage_default_instance_);
  }

  void Swap(RpcMessage* other);

  // implements Message ----------------------------------------------

  inline RpcMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  RpcMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const RpcMessage& from);
  void MergeFrom(const RpcMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RpcMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .nms_RpcMessage.StringValue strvals = 10;
  int strvals_size() const;
  void clear_strvals();
  static const int kStrvalsFieldNumber = 10;
  const ::nms_RpcMessage::StringValue& strvals(int index) const;
  ::nms_RpcMessage::StringValue* mutable_strvals(int index);
  ::nms_RpcMessage::StringValue* add_strvals();
  ::google::protobuf::RepeatedPtrField< ::nms_RpcMessage::StringValue >*
      mutable_strvals();
  const ::google::protobuf::RepeatedPtrField< ::nms_RpcMessage::StringValue >&
      strvals() const;

  // repeated .nms_RpcMessage.IntValue intvals = 11;
  int intvals_size() const;
  void clear_intvals();
  static const int kIntvalsFieldNumber = 11;
  const ::nms_RpcMessage::IntValue& intvals(int index) const;
  ::nms_RpcMessage::IntValue* mutable_intvals(int index);
  ::nms_RpcMessage::IntValue* add_intvals();
  ::google::protobuf::RepeatedPtrField< ::nms_RpcMessage::IntValue >*
      mutable_intvals();
  const ::google::protobuf::RepeatedPtrField< ::nms_RpcMessage::IntValue >&
      intvals() const;

  // repeated .nms_RpcMessage.BinValue binvals = 12;
  int binvals_size() const;
  void clear_binvals();
  static const int kBinvalsFieldNumber = 12;
  const ::nms_RpcMessage::BinValue& binvals(int index) const;
  ::nms_RpcMessage::BinValue* mutable_binvals(int index);
  ::nms_RpcMessage::BinValue* add_binvals();
  ::google::protobuf::RepeatedPtrField< ::nms_RpcMessage::BinValue >*
      mutable_binvals();
  const ::google::protobuf::RepeatedPtrField< ::nms_RpcMessage::BinValue >&
      binvals() const;

  // repeated .nms_RpcMessage.StringPair strpairs = 13;
  int strpairs_size() const;
  void clear_strpairs();
  static const int kStrpairsFieldNumber = 13;
  const ::nms_RpcMessage::StringPair& strpairs(int index) const;
  ::nms_RpcMessage::StringPair* mutable_strpairs(int index);
  ::nms_RpcMessage::StringPair* add_strpairs();
  ::google::protobuf::RepeatedPtrField< ::nms_RpcMessage::StringPair >*
      mutable_strpairs();
  const ::google::protobuf::RepeatedPtrField< ::nms_RpcMessage::StringPair >&
      strpairs() const;

  // fixed32 msgno = 1;
  void clear_msgno();
  static const int kMsgnoFieldNumber = 1;
  ::google::protobuf::uint32 msgno() const;
  void set_msgno(::google::protobuf::uint32 value);

  // int32 cmd = 2;
  void clear_cmd();
  static const int kCmdFieldNumber = 2;
  ::google::protobuf::int32 cmd() const;
  void set_cmd(::google::protobuf::int32 value);

  // int32 subcmd = 3;
  void clear_subcmd();
  static const int kSubcmdFieldNumber = 3;
  ::google::protobuf::int32 subcmd() const;
  void set_subcmd(::google::protobuf::int32 value);

  // int32 error = 6;
  void clear_error();
  static const int kErrorFieldNumber = 6;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // int32 info = 7;
  void clear_info();
  static const int kInfoFieldNumber = 7;
  ::google::protobuf::int32 info() const;
  void set_info(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:nms_RpcMessage.RpcMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::nms_RpcMessage::StringValue > strvals_;
  ::google::protobuf::RepeatedPtrField< ::nms_RpcMessage::IntValue > intvals_;
  ::google::protobuf::RepeatedPtrField< ::nms_RpcMessage::BinValue > binvals_;
  ::google::protobuf::RepeatedPtrField< ::nms_RpcMessage::StringPair > strpairs_;
  ::google::protobuf::uint32 msgno_;
  ::google::protobuf::int32 cmd_;
  ::google::protobuf::int32 subcmd_;
  ::google::protobuf::int32 error_;
  ::google::protobuf::int32 info_;
  mutable int _cached_size_;
  friend struct  protobuf_RpcMessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// StringValue

// int32 key = 1;
inline void StringValue::clear_key() {
  key_ = 0;
}
inline ::google::protobuf::int32 StringValue::key() const {
  // @@protoc_insertion_point(field_get:nms_RpcMessage.StringValue.key)
  return key_;
}
inline void StringValue::set_key(::google::protobuf::int32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:nms_RpcMessage.StringValue.key)
}

// string value = 2;
inline void StringValue::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StringValue::value() const {
  // @@protoc_insertion_point(field_get:nms_RpcMessage.StringValue.value)
  return value_.GetNoArena();
}
inline void StringValue::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nms_RpcMessage.StringValue.value)
}
#if LANG_CXX11
inline void StringValue::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nms_RpcMessage.StringValue.value)
}
#endif
inline void StringValue::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nms_RpcMessage.StringValue.value)
}
inline void StringValue::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nms_RpcMessage.StringValue.value)
}
inline ::std::string* StringValue::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:nms_RpcMessage.StringValue.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StringValue::release_value() {
  // @@protoc_insertion_point(field_release:nms_RpcMessage.StringValue.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StringValue::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:nms_RpcMessage.StringValue.value)
}

// -------------------------------------------------------------------

// IntValue

// int32 key = 1;
inline void IntValue::clear_key() {
  key_ = 0;
}
inline ::google::protobuf::int32 IntValue::key() const {
  // @@protoc_insertion_point(field_get:nms_RpcMessage.IntValue.key)
  return key_;
}
inline void IntValue::set_key(::google::protobuf::int32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:nms_RpcMessage.IntValue.key)
}

// int32 value = 2;
inline void IntValue::clear_value() {
  value_ = 0;
}
inline ::google::protobuf::int32 IntValue::value() const {
  // @@protoc_insertion_point(field_get:nms_RpcMessage.IntValue.value)
  return value_;
}
inline void IntValue::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:nms_RpcMessage.IntValue.value)
}

// -------------------------------------------------------------------

// BinValue

// int32 key = 1;
inline void BinValue::clear_key() {
  key_ = 0;
}
inline ::google::protobuf::int32 BinValue::key() const {
  // @@protoc_insertion_point(field_get:nms_RpcMessage.BinValue.key)
  return key_;
}
inline void BinValue::set_key(::google::protobuf::int32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:nms_RpcMessage.BinValue.key)
}

// bytes value = 2;
inline void BinValue::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BinValue::value() const {
  // @@protoc_insertion_point(field_get:nms_RpcMessage.BinValue.value)
  return value_.GetNoArena();
}
inline void BinValue::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nms_RpcMessage.BinValue.value)
}
#if LANG_CXX11
inline void BinValue::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nms_RpcMessage.BinValue.value)
}
#endif
inline void BinValue::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nms_RpcMessage.BinValue.value)
}
inline void BinValue::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nms_RpcMessage.BinValue.value)
}
inline ::std::string* BinValue::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:nms_RpcMessage.BinValue.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BinValue::release_value() {
  // @@protoc_insertion_point(field_release:nms_RpcMessage.BinValue.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BinValue::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:nms_RpcMessage.BinValue.value)
}

// -------------------------------------------------------------------

// StringPair

// string key = 1;
inline void StringPair::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StringPair::key() const {
  // @@protoc_insertion_point(field_get:nms_RpcMessage.StringPair.key)
  return key_.GetNoArena();
}
inline void StringPair::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nms_RpcMessage.StringPair.key)
}
#if LANG_CXX11
inline void StringPair::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nms_RpcMessage.StringPair.key)
}
#endif
inline void StringPair::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nms_RpcMessage.StringPair.key)
}
inline void StringPair::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nms_RpcMessage.StringPair.key)
}
inline ::std::string* StringPair::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:nms_RpcMessage.StringPair.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StringPair::release_key() {
  // @@protoc_insertion_point(field_release:nms_RpcMessage.StringPair.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StringPair::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:nms_RpcMessage.StringPair.key)
}

// string value = 2;
inline void StringPair::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StringPair::value() const {
  // @@protoc_insertion_point(field_get:nms_RpcMessage.StringPair.value)
  return value_.GetNoArena();
}
inline void StringPair::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nms_RpcMessage.StringPair.value)
}
#if LANG_CXX11
inline void StringPair::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nms_RpcMessage.StringPair.value)
}
#endif
inline void StringPair::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nms_RpcMessage.StringPair.value)
}
inline void StringPair::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nms_RpcMessage.StringPair.value)
}
inline ::std::string* StringPair::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:nms_RpcMessage.StringPair.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StringPair::release_value() {
  // @@protoc_insertion_point(field_release:nms_RpcMessage.StringPair.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StringPair::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:nms_RpcMessage.StringPair.value)
}

// -------------------------------------------------------------------

// RpcMessage

// fixed32 msgno = 1;
inline void RpcMessage::clear_msgno() {
  msgno_ = 0u;
}
inline ::google::protobuf::uint32 RpcMessage::msgno() const {
  // @@protoc_insertion_point(field_get:nms_RpcMessage.RpcMessage.msgno)
  return msgno_;
}
inline void RpcMessage::set_msgno(::google::protobuf::uint32 value) {
  
  msgno_ = value;
  // @@protoc_insertion_point(field_set:nms_RpcMessage.RpcMessage.msgno)
}

// int32 cmd = 2;
inline void RpcMessage::clear_cmd() {
  cmd_ = 0;
}
inline ::google::protobuf::int32 RpcMessage::cmd() const {
  // @@protoc_insertion_point(field_get:nms_RpcMessage.RpcMessage.cmd)
  return cmd_;
}
inline void RpcMessage::set_cmd(::google::protobuf::int32 value) {
  
  cmd_ = value;
  // @@protoc_insertion_point(field_set:nms_RpcMessage.RpcMessage.cmd)
}

// int32 subcmd = 3;
inline void RpcMessage::clear_subcmd() {
  subcmd_ = 0;
}
inline ::google::protobuf::int32 RpcMessage::subcmd() const {
  // @@protoc_insertion_point(field_get:nms_RpcMessage.RpcMessage.subcmd)
  return subcmd_;
}
inline void RpcMessage::set_subcmd(::google::protobuf::int32 value) {
  
  subcmd_ = value;
  // @@protoc_insertion_point(field_set:nms_RpcMessage.RpcMessage.subcmd)
}

// int32 error = 6;
inline void RpcMessage::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 RpcMessage::error() const {
  // @@protoc_insertion_point(field_get:nms_RpcMessage.RpcMessage.error)
  return error_;
}
inline void RpcMessage::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:nms_RpcMessage.RpcMessage.error)
}

// int32 info = 7;
inline void RpcMessage::clear_info() {
  info_ = 0;
}
inline ::google::protobuf::int32 RpcMessage::info() const {
  // @@protoc_insertion_point(field_get:nms_RpcMessage.RpcMessage.info)
  return info_;
}
inline void RpcMessage::set_info(::google::protobuf::int32 value) {
  
  info_ = value;
  // @@protoc_insertion_point(field_set:nms_RpcMessage.RpcMessage.info)
}

// repeated .nms_RpcMessage.StringValue strvals = 10;
inline int RpcMessage::strvals_size() const {
  return strvals_.size();
}
inline void RpcMessage::clear_strvals() {
  strvals_.Clear();
}
inline const ::nms_RpcMessage::StringValue& RpcMessage::strvals(int index) const {
  // @@protoc_insertion_point(field_get:nms_RpcMessage.RpcMessage.strvals)
  return strvals_.Get(index);
}
inline ::nms_RpcMessage::StringValue* RpcMessage::mutable_strvals(int index) {
  // @@protoc_insertion_point(field_mutable:nms_RpcMessage.RpcMessage.strvals)
  return strvals_.Mutable(index);
}
inline ::nms_RpcMessage::StringValue* RpcMessage::add_strvals() {
  // @@protoc_insertion_point(field_add:nms_RpcMessage.RpcMessage.strvals)
  return strvals_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::nms_RpcMessage::StringValue >*
RpcMessage::mutable_strvals() {
  // @@protoc_insertion_point(field_mutable_list:nms_RpcMessage.RpcMessage.strvals)
  return &strvals_;
}
inline const ::google::protobuf::RepeatedPtrField< ::nms_RpcMessage::StringValue >&
RpcMessage::strvals() const {
  // @@protoc_insertion_point(field_list:nms_RpcMessage.RpcMessage.strvals)
  return strvals_;
}

// repeated .nms_RpcMessage.IntValue intvals = 11;
inline int RpcMessage::intvals_size() const {
  return intvals_.size();
}
inline void RpcMessage::clear_intvals() {
  intvals_.Clear();
}
inline const ::nms_RpcMessage::IntValue& RpcMessage::intvals(int index) const {
  // @@protoc_insertion_point(field_get:nms_RpcMessage.RpcMessage.intvals)
  return intvals_.Get(index);
}
inline ::nms_RpcMessage::IntValue* RpcMessage::mutable_intvals(int index) {
  // @@protoc_insertion_point(field_mutable:nms_RpcMessage.RpcMessage.intvals)
  return intvals_.Mutable(index);
}
inline ::nms_RpcMessage::IntValue* RpcMessage::add_intvals() {
  // @@protoc_insertion_point(field_add:nms_RpcMessage.RpcMessage.intvals)
  return intvals_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::nms_RpcMessage::IntValue >*
RpcMessage::mutable_intvals() {
  // @@protoc_insertion_point(field_mutable_list:nms_RpcMessage.RpcMessage.intvals)
  return &intvals_;
}
inline const ::google::protobuf::RepeatedPtrField< ::nms_RpcMessage::IntValue >&
RpcMessage::intvals() const {
  // @@protoc_insertion_point(field_list:nms_RpcMessage.RpcMessage.intvals)
  return intvals_;
}

// repeated .nms_RpcMessage.BinValue binvals = 12;
inline int RpcMessage::binvals_size() const {
  return binvals_.size();
}
inline void RpcMessage::clear_binvals() {
  binvals_.Clear();
}
inline const ::nms_RpcMessage::BinValue& RpcMessage::binvals(int index) const {
  // @@protoc_insertion_point(field_get:nms_RpcMessage.RpcMessage.binvals)
  return binvals_.Get(index);
}
inline ::nms_RpcMessage::BinValue* RpcMessage::mutable_binvals(int index) {
  // @@protoc_insertion_point(field_mutable:nms_RpcMessage.RpcMessage.binvals)
  return binvals_.Mutable(index);
}
inline ::nms_RpcMessage::BinValue* RpcMessage::add_binvals() {
  // @@protoc_insertion_point(field_add:nms_RpcMessage.RpcMessage.binvals)
  return binvals_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::nms_RpcMessage::BinValue >*
RpcMessage::mutable_binvals() {
  // @@protoc_insertion_point(field_mutable_list:nms_RpcMessage.RpcMessage.binvals)
  return &binvals_;
}
inline const ::google::protobuf::RepeatedPtrField< ::nms_RpcMessage::BinValue >&
RpcMessage::binvals() const {
  // @@protoc_insertion_point(field_list:nms_RpcMessage.RpcMessage.binvals)
  return binvals_;
}

// repeated .nms_RpcMessage.StringPair strpairs = 13;
inline int RpcMessage::strpairs_size() const {
  return strpairs_.size();
}
inline void RpcMessage::clear_strpairs() {
  strpairs_.Clear();
}
inline const ::nms_RpcMessage::StringPair& RpcMessage::strpairs(int index) const {
  // @@protoc_insertion_point(field_get:nms_RpcMessage.RpcMessage.strpairs)
  return strpairs_.Get(index);
}
inline ::nms_RpcMessage::StringPair* RpcMessage::mutable_strpairs(int index) {
  // @@protoc_insertion_point(field_mutable:nms_RpcMessage.RpcMessage.strpairs)
  return strpairs_.Mutable(index);
}
inline ::nms_RpcMessage::StringPair* RpcMessage::add_strpairs() {
  // @@protoc_insertion_point(field_add:nms_RpcMessage.RpcMessage.strpairs)
  return strpairs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::nms_RpcMessage::StringPair >*
RpcMessage::mutable_strpairs() {
  // @@protoc_insertion_point(field_mutable_list:nms_RpcMessage.RpcMessage.strpairs)
  return &strpairs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::nms_RpcMessage::StringPair >&
RpcMessage::strpairs() const {
  // @@protoc_insertion_point(field_list:nms_RpcMessage.RpcMessage.strpairs)
  return strpairs_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace nms_RpcMessage

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::nms_RpcMessage::Rpc_CmdID> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::nms_RpcMessage::Rpc_SubCmdID> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::nms_RpcMessage::ErrorCode> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::nms_RpcMessage::Rpc_KeyCode> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::nms_RpcMessage::Rpc_RunStatus> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RpcMessage_2eproto__INCLUDED
